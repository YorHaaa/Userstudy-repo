{
  "/home/node/Userstudy-repo/core/src/com/google/inject/AbstractModule.java": [
    {
      "className": "",
      "content": "AbstractModule is a helper class used to add bindings to the Guice injector.",
      "id": 0,
      "index": [
        0,
        76
      ],
      "language": "java",
      "lastCommitDate": "2007-01-29T22:58:35.000Z",
      "level": "class",
      "lineNumber": [
        17,
        17
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Simply extend this class, then you can add bindings by either defining @Provides methods (see\nhttps://github.com/google/guice/wiki/ProvidesMethods) or implementing {@link #configure()}, and\ncalling the inherited methods which mirror those found in {@link Binder}. For example:",
      "id": 1,
      "index": [
        0,
        279
      ],
      "language": "java",
      "lastCommitDate": "2020-10-28T17:51:53.000Z",
      "level": "class",
      "lineNumber": [
        19,
        21
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "expand",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "public class MyModule extends AbstractModule {\n  protected void configure() {\n    bind(Service.class).to(ServiceImpl.class).in(Singleton.class);\n    bind(CreditCardPaymentService.class);\n    bind(PaymentService.class).to(CreditCardPaymentService.class);\n    bindConstant().annotatedWith(Names.named(\"port\")).to(8080);\n  }\n}",
      "id": 2,
      "index": [
        0,
        6
      ],
      "language": "java",
      "lastCommitDate": "2007-01-31T02:25:21.000Z",
      "level": "class",
      "lineNumber": [
        24,
        31
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)",
      "id": 3,
      "index": [
        0,
        37
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "class",
      "lineNumber": [
        35,
        35
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "Configures a {@link Binder} via the exposed methods.",
      "id": 4,
      "index": [
        6,
        58
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        54,
        54
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "Gets direct access to the underlying {@code Binder}.",
      "id": 5,
      "index": [
        6,
        58
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        57,
        57
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#bindScope(Class, Scope)",
      "id": 6,
      "index": [
        6,
        41
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "class",
      "lineNumber": [
        63,
        63
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#bind(Key)",
      "id": 7,
      "index": [
        6,
        27
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        68,
        68
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "See {@link Binder#bind(TypeLiteral)}.",
      "id": 8,
      "index": [
        6,
        43
      ],
      "language": "java",
      "lastCommitDate": "2022-03-08T21:40:21.000Z",
      "level": "class",
      "lineNumber": [
        73,
        73
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "See {@link Binder#bind(Class)}.",
      "id": 9,
      "index": [
        6,
        37
      ],
      "language": "java",
      "lastCommitDate": "2022-03-08T21:40:21.000Z",
      "level": "class",
      "lineNumber": [
        78,
        78
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#bindConstant()",
      "id": 10,
      "index": [
        6,
        32
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        83,
        83
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#install(Module)",
      "id": 11,
      "index": [
        6,
        33
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        88,
        88
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#addError(String, Object[])",
      "id": 12,
      "index": [
        6,
        44
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        93,
        93
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#addError(Throwable)",
      "id": 13,
      "index": [
        6,
        37
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        98,
        98
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#addError(Message)\n@since 2.0",
      "id": 14,
      "index": [
        2,
        42
      ],
      "language": "java",
      "lastCommitDate": "2008-06-16T07:22:47.000Z",
      "level": "class",
      "lineNumber": [
        103,
        104
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#requestInjection(Object)\n@since 2.0",
      "id": 15,
      "index": [
        2,
        49
      ],
      "language": "java",
      "lastCommitDate": "2008-06-24T22:22:59.000Z",
      "level": "class",
      "lineNumber": [
        111,
        112
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#requestInjection(TypeLiteral, Object)\n@since 6.0",
      "id": 16,
      "index": [
        2,
        62
      ],
      "language": "java",
      "lastCommitDate": "2023-04-21T00:56:54.000Z",
      "level": "class",
      "lineNumber": [
        119,
        120
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#requestStaticInjection(Class[])",
      "id": 17,
      "index": [
        6,
        49
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "class",
      "lineNumber": [
        127,
        127
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#bindInterceptor",
      "id": 18,
      "index": [
        6,
        33
      ],
      "language": "java",
      "lastCommitDate": "2022-02-07T22:30:32.000Z",
      "level": "class",
      "lineNumber": [
        132,
        132
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "Adds a dependency from this module to {@code key}. When the injector is created, Guice will\nreport an error if {@code key} cannot be injected. Note that this requirement may be satisfied\nby implicit binding, such as a public no-arguments constructor.",
      "id": 19,
      "index": [
        2,
        252
      ],
      "language": "java",
      "lastCommitDate": "2008-07-24T21:32:33.000Z",
      "level": "class",
      "lineNumber": [
        140,
        142
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@since 2.0",
      "id": 20,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2008-11-18T07:01:33.000Z",
      "level": "class",
      "lineNumber": [
        144,
        144
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "Adds a dependency from this module to {@code type}. When the injector is created, Guice will\nreport an error if {@code type} cannot be injected. Note that this requirement may be satisfied\nby implicit binding, such as a public no-arguments constructor.",
      "id": 21,
      "index": [
        2,
        254
      ],
      "language": "java",
      "lastCommitDate": "2008-07-24T21:32:33.000Z",
      "level": "class",
      "lineNumber": [
        151,
        153
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@since 2.0",
      "id": 22,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2008-11-18T07:01:33.000Z",
      "level": "class",
      "lineNumber": [
        155,
        155
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#getProvider(Key)\n@since 2.0",
      "id": 23,
      "index": [
        2,
        41
      ],
      "language": "java",
      "lastCommitDate": "2007-05-09T00:44:37.000Z",
      "level": "class",
      "lineNumber": [
        162,
        163
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#getProvider(Class)\n@since 2.0",
      "id": 24,
      "index": [
        2,
        43
      ],
      "language": "java",
      "lastCommitDate": "2007-05-09T00:44:37.000Z",
      "level": "class",
      "lineNumber": [
        170,
        171
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#convertToTypes\n@since 2.0",
      "id": 25,
      "index": [
        2,
        39
      ],
      "language": "java",
      "lastCommitDate": "2007-09-09T03:41:05.000Z",
      "level": "class",
      "lineNumber": [
        178,
        179
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#currentStage()\n@since 2.0",
      "id": 26,
      "index": [
        2,
        39
      ],
      "language": "java",
      "lastCommitDate": "2007-09-09T03:41:05.000Z",
      "level": "class",
      "lineNumber": [
        187,
        188
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#getMembersInjector(Class)\n@since 2.0",
      "id": 27,
      "index": [
        2,
        50
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "class",
      "lineNumber": [
        195,
        196
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#getMembersInjector(TypeLiteral)\n@since 2.0",
      "id": 28,
      "index": [
        2,
        56
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "class",
      "lineNumber": [
        203,
        204
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#bindListener(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeListener)\n@since 2.0",
      "id": 29,
      "index": [
        2,
        108
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "class",
      "lineNumber": [
        211,
        212
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "AbstractModule",
      "content": "@see Binder#bindListener(Matcher, ProvisionListener...)\n@since 4.0",
      "id": 30,
      "index": [
        2,
        68
      ],
      "language": "java",
      "lastCommitDate": "2011-06-05T18:32:05.000Z",
      "level": "class",
      "lineNumber": [
        219,
        220
      ],
      "relativePath": "/core/src/com/google/inject/AbstractModule.java",
      "type": [
        "pointer"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/Binder.java": [
    {
      "className": "",
      "content": "<h3>The Guice Binding EDSL</h3>",
      "id": 37,
      "index": [
        0,
        31
      ],
      "language": "java",
      "lastCommitDate": "2025-06-07T13:27:27.000Z",
      "level": "inline",
      "lineNumber": [
        16,
        16
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Guice uses an <i>embedded domain-specific language</i>, or EDSL, to help you create bindings\nsimply and readably.",
      "id": 38,
      "index": [
        0,
        113
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        18,
        19
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "bind(ServiceImpl.class);</pre>",
      "id": 39,
      "index": [
        0,
        30
      ],
      "language": "java",
      "lastCommitDate": "2025-06-07T13:27:27.000Z",
      "level": "inline",
      "lineNumber": [
        22,
        22
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "This statement mostly does nothing; it \"binds the {@code ServiceImpl} class to itself\".",
      "id": 40,
      "index": [
        0,
        87
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        24,
        24
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "bind(Service.class).to(ServiceImpl.class);</pre>",
      "id": 41,
      "index": [
        0,
        48
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        27,
        27
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Specifies that a request for a {@code Service} instance should be treated as a request for a\n{@code ServiceImpl} instance. This <i>overrides</i> {@link ImplementedBy @ImplementedBy} or\n{@link ProvidedBy @ProvidedBy} annotations on {@code Service}.",
      "id": 42,
      "index": [
        0,
        247
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        29,
        31
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "bind(Service.class).toProvider(ServiceProvider.class);</pre>",
      "id": 43,
      "index": [
        0,
        60
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        34,
        34
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "{@code ServiceProvider} must implement {@code Provider<Service>}. Guice resolves the provider,\nthen calls {@link Provider#get get()} to obtain the {@code Service}.",
      "id": 44,
      "index": [
        0,
        163
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        36,
        37
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "pointer",
        "rational"
      ]
    },
    {
      "className": "",
      "content": "bind(Service.class).annotatedWith(Red.class).to(ServiceImpl.class);</pre>",
      "id": 45,
      "index": [
        0,
        73
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        40,
        40
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Like the previous example, but applies to injection requests using the {@code @Red} annotation.",
      "id": 46,
      "index": [
        0,
        95
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        42,
        42
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "bind(ServiceImpl.class).in(Singleton.class);\n    bind(ServiceImpl.class).in(Scopes.SINGLETON);</pre>",
      "id": 47,
      "index": [
        0,
        100
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        45,
        46
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Places the {@code ServiceImpl} class into singleton scope.",
      "id": 48,
      "index": [
        0,
        58
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        48,
        48
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>Note: a scope specified this way <i>overrides</i> scope annotations on the class.",
      "id": 49,
      "index": [
        0,
        84
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "inline",
      "lineNumber": [
        50,
        50
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<pre>{@code\nbind(new TypeLiteral<PaymentService<CreditCard>>() {})\n    .to(CreditCardPaymentService.class);\n}</pre>",
      "id": 50,
      "index": [
        0,
        115
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        52,
        55
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Binds a parameterized type. Guice requires type parameters to be fully specified.",
      "id": 51,
      "index": [
        0,
        81
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        57,
        57
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "bind(Service.class).toInstance(new ServiceImpl());\n    // or, alternatively\n    bind(Service.class).toInstance(SomeLegacyRegistry.getService());</pre>",
      "id": 52,
      "index": [
        0,
        150
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        60,
        62
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "The module takes responsibility for providing the instance. Guice will inject fields and methods,\nbut ignores constructors.",
      "id": 53,
      "index": [
        0,
        123
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        64,
        65
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "bindConstant().annotatedWith(ServerHost.class).to(args[0]);</pre>",
      "id": 54,
      "index": [
        0,
        65
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        68,
        68
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Sets up a constant binding. Constants must always be annotated.",
      "id": 55,
      "index": [
        0,
        63
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        70,
        70
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "{@literal @}Color(\"red\") Color red; // A member variable (field)\n   . . .\n    red = MyModule.class.getDeclaredField(\"red\").getAnnotation(Color.class);\n    bind(Service.class).annotatedWith(red).to(RedService.class);</pre>",
      "id": 56,
      "index": [
        0,
        221
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        73,
        76
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "If your binding annotation has parameters you can apply different bindings to different specific\nvalues of your annotation. Getting your hands on the right instance of the annotation is a bit of\na pain -- one approach, shown above, is to apply a prototype annotation to a field in your module\nclass, so that you can read this annotation instance and give it to Guice.",
      "id": 57,
      "index": [
        0,
        367
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        78,
        81
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "",
      "content": "bind(Service.class)\n        .annotatedWith(Names.named(\"blue\"))\n        .to(BlueService.class);</pre>",
      "id": 58,
      "index": [
        0,
        101
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        84,
        86
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "{@link com.google.inject.name.Named @Named} is a standard annotation for named bindings.",
      "id": 59,
      "index": [
        0,
        88
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        88,
        88
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<pre>{@code\nConstructor<T> loneCtor = getLoneCtorFromServiceImplViaReflection();\nbind(ServiceImpl.class)\n    .toConstructor(loneCtor);\n}</pre>",
      "id": 60,
      "index": [
        0,
        142
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        90,
        94
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Binds a specific constructor. Useful when you can't use {@literal @}Inject.",
      "id": 61,
      "index": [
        0,
        75
      ],
      "language": "java",
      "lastCommitDate": "2010-01-05T00:02:57.000Z",
      "level": "inline",
      "lineNumber": [
        96,
        96
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<p>The other methods of Binder such as {@link #bindInterceptor}, {@link #install}, {@link \n#requestStaticInjection} are not part of the Binding EDSL; you can learn how to use these in \nthe usual way, from the method documentation.",
      "id": 62,
      "index": [
        0,
        230
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "inline",
      "lineNumber": [
        98,
        100
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "Binder collects configuration information (primarily <i>bindings</i>) which will be used to create an\n{@link Injector}. Guice provides this object to your application's {@link Module} implementors so\nthey may each contribute their own bindings and other registrations.",
      "id": 63,
      "index": [
        0,
        268
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "inline",
      "lineNumber": [
        102,
        104
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)\n@author jessewilson@google.com (Jesse Wilson)\n@author kevinb@google.com (Kevin Bourrillion)",
      "id": 64,
      "index": [
        0,
        129
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T04:34:38.000Z",
      "level": "inline",
      "lineNumber": [
        106,
        108
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "",
      "content": "Binds method interceptor[s] to methods matched by class and method matchers. A method is\neligible for interception if:",
      "id": 65,
      "index": [
        2,
        120
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T05:23:46.000Z",
      "level": "method",
      "lineNumber": [
        114,
        115
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<li>Guice created the instance the method is on\n  <li>Neither the enclosing type nor the method is final\n  <li>And the method is package-private, protected, or public",
      "id": 66,
      "index": [
        2,
        168
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        118,
        120
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "",
      "content": "<p>Note: this API only works if {@code guice_bytecode_gen_option} is set to {@code ENABLED}.",
      "id": 67,
      "index": [
        2,
        94
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        123,
        123
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@param classMatcher matches classes the interceptor should apply to. For example: {@code\n    only(Runnable.class)}.\n@param methodMatcher matches methods the interceptor should apply to. For example: {@code\n    annotatedWith(Transactional.class)}.\n@param interceptors to bind. The interceptors are called in the order they are given.",
      "id": 68,
      "index": [
        2,
        334
      ],
      "language": "java",
      "lastCommitDate": "2020-10-09T16:22:49.000Z",
      "level": "method",
      "lineNumber": [
        125,
        129
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "See the EDSL examples at {@link Binder}.",
      "id": 69,
      "index": [
        6,
        46
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        137,
        137
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "See the EDSL examples at {@link Binder}.",
      "id": 70,
      "index": [
        6,
        46
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        140,
        140
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "See the EDSL examples at {@link Binder}.",
      "id": 71,
      "index": [
        6,
        46
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        143,
        143
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "See the EDSL examples at {@link Binder}.",
      "id": 72,
      "index": [
        6,
        46
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        146,
        146
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Upon successful creation, the {@link Injector} will inject instance fields and methods of the\ngiven object.\nthis method takes one single arugment to capture the full generic type information of the instance",
      "id": 73,
      "index": [
        2,
        208
      ],
      "language": "java",
      "lastCommitDate": "2005-06-24T22:22:59.000Z",
      "level": "method",
      "lineNumber": [
        149,
        151
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary",
        "expand"
      ]
    },
    {
      "className": "",
      "content": "@param instance for which members will be injected\n@since 2.0",
      "id": 74,
      "index": [
        2,
        63
      ],
      "language": "java",
      "lastCommitDate": "2005-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        153,
        154
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Upon successful creation, the {@link Injector} will inject instance fields and methods of the\ngiven object.\nthis method takes one single arugment with less type info required which will be inferred from runtime",
      "id": 75,
      "index": [
        2,
        212
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        159,
        161
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary",
        "expand"
      ]
    },
    {
      "className": "",
      "content": "@param instance for which members will be injected\n@since 2.0",
      "id": 76,
      "index": [
        2,
        63
      ],
      "language": "java",
      "lastCommitDate": "2008-06-24T22:22:59.000Z",
      "level": "method",
      "lineNumber": [
        163,
        164
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Upon successful creation, the {@link Injector} will inject static fields and methods in the\ngiven classes.",
      "id": 77,
      "index": [
        2,
        108
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T05:23:46.000Z",
      "level": "method",
      "lineNumber": [
        169,
        170
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "the implementaion should be refactored to use {@link TypeLiteral} in 5.0, so that it can handle generic types\nkept for backward compatibility",
      "id": 78,
      "index": [
        2,
        143
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        172,
        173
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@param types for which static members will be injected",
      "id": 79,
      "index": [
        2,
        56
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        175,
        175
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Uses the given module to configure more bindings.",
      "id": 80,
      "index": [
        6,
        55
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        180,
        180
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Returns the provider used to obtain instances for the given injection key. The returned\nprovider will not be valid until the {@link Injector} has been created. The provider will throw\nan {@code IllegalStateException} if you try to use it beforehand.",
      "id": 81,
      "index": [
        2,
        251
      ],
      "language": "java",
      "lastCommitDate": "2007-05-08T20:49:31.000Z",
      "level": "method",
      "lineNumber": [
        183,
        185
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@since 2.0",
      "id": 82,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        187,
        187
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the provider used to obtain instances for the given injection key. The returned\nprovider will be attached to the injection point and will follow the nullability specified in\nthe dependency. Additionally, the returned provider will not be valid until the {@link\nInjector} has been created. The provider will throw an {@code IllegalStateException} if you try\nto use it beforehand.",
      "id": 83,
      "index": [
        2,
        388
      ],
      "language": "java",
      "lastCommitDate": "2015-02-02T20:45:25.000Z",
      "level": "method",
      "lineNumber": [
        192,
        196
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param dependency the dependency to get a provider for\n@param <T> the type of the dependency\n@throws MessageException if the dependency cannot be resolved\n@return a provider for the given dependency\n@since 4.0",
      "id": 84,
      "index": [
        2,
        211
      ],
      "language": "java",
      "lastCommitDate": "2005-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        198,
        202
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the provider used to obtain instances for the given injection type. The returned\nprovider will not be valid until the {@link Injector} has been created. The provider will throw\nan {@code IllegalStateException} if you try to use it beforehand.",
      "id": 85,
      "index": [
        2,
        252
      ],
      "language": "java",
      "lastCommitDate": "2007-05-08T20:49:31.000Z",
      "level": "method",
      "lineNumber": [
        207,
        209
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@since 2.0",
      "id": 86,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2008-11-18T07:01:33.000Z",
      "level": "method",
      "lineNumber": [
        211,
        211
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the members injector used to inject dependencies into methods and fields on instances\nof the given type {@code T}. The returned members injector will not be valid until the main\n{@link Injector} has been created. The members injector will throw an {@code\nIllegalStateException} if you try to use it beforehand.",
      "id": 87,
      "index": [
        2,
        320
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        216,
        219
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param typeLiteral type to get members injector for\n@since 2.0",
      "id": 88,
      "index": [
        2,
        64
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        221,
        222
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the members injector used to inject dependencies into methods and fields on instances\nof the given type {@code T}. The returned members injector will not be valid until the main\n{@link Injector} has been created. The members injector will throw an {@code\nIllegalStateException} if you try to use it beforehand.",
      "id": 89,
      "index": [
        2,
        320
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        227,
        230
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "to be removed in 5.0, use {@link #getMembersInjector(TypeLiteral)} instead.",
      "id": 90,
      "index": [
        2,
        77
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        232,
        232
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@param type type to get members injector for\n@since 2.0",
      "id": 91,
      "index": [
        2,
        57
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        234,
        235
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Binds a type converter. The injector will use the given converter to convert string constants\nto matching types as needed.",
      "id": 92,
      "index": [
        2,
        124
      ],
      "language": "java",
      "lastCommitDate": "2007-09-09T03:41:05.000Z",
      "level": "method",
      "lineNumber": [
        240,
        241
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param typeMatcher matches types the converter can handle\n@param converter converts values\n@since 2.0",
      "id": 93,
      "index": [
        2,
        103
      ],
      "language": "java",
      "lastCommitDate": "2007-09-09T03:41:05.000Z",
      "level": "method",
      "lineNumber": [
        243,
        245
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a binder that uses {@code source} as the reference location for configuration errors.\nThis is typically a {@link StackTraceElement} for {@code .java} source but it could any binding\nsource, such as the path to a {@code .properties} file.",
      "id": 94,
      "index": [
        2,
        247
      ],
      "language": "java",
      "lastCommitDate": "2008-06-17T02:49:18.000Z",
      "level": "method",
      "lineNumber": [
        250,
        252
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@deprecated in 5.0, use {@link #withSource(Object)} instead.",
      "id": 95,
      "index": [
        2,
        62
      ],
      "language": "java",
      "lastCommitDate": "2008-06-17T02:49:18.000Z",
      "level": "method",
      "lineNumber": [
        254,
        254
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@param source any object representing the source location and has a concise {@link\n    Object#toString() toString()} value\n@return a binder that shares its configuration with this binder\n@since 2.0",
      "id": 96,
      "index": [
        2,
        199
      ],
      "language": "java",
      "lastCommitDate": "2025-06-07T13:27:28.000Z",
      "level": "method",
      "lineNumber": [
        256,
        259
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a binder that skips {@code classesToSkip} when identify the calling code. The caller's\n{@link StackTraceElement} is used to locate the source of configuration errors.",
      "id": 97,
      "index": [
        2,
        176
      ],
      "language": "java",
      "lastCommitDate": "2008-06-19T07:57:55.000Z",
      "level": "method",
      "lineNumber": [
        264,
        265
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Returns void when {@code classesToSkip} is empty.",
      "id": 98,
      "index": [
        2,
        51
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        267,
        267
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param classesToSkip library classes that create bindings on behalf of their clients.\n@return void – this method performs configuration side effects but does not return a value. \nWhen {@code classesToSkip} is empty, no skipping behavior is applied and the method exits immediately.\n@since 2.0",
      "id": 99,
      "index": [
        2,
        294
      ],
      "language": "java",
      "lastCommitDate": "2005-06-19T07:57:55.000Z",
      "level": "method",
      "lineNumber": [
        269,
        272
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Creates a new private child environment for bindings and other configuration. The returned\nbinder can be used to add and configuration information in this environment. See {@link\nPrivateModule} for details.",
      "id": 100,
      "index": [
        2,
        208
      ],
      "language": "java",
      "lastCommitDate": "2008-11-25T08:43:49.000Z",
      "level": "method",
      "lineNumber": [
        277,
        279
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "This is no longer used and only present for backward compatibility.",
      "id": 101,
      "index": [
        2,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        281,
        281
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@return a binder that inherits configuration from this binder. Only exposed configuration on\n    the returned binder will be visible to this binder.\n@since 2.0",
      "id": 102,
      "index": [
        2,
        161
      ],
      "language": "java",
      "lastCommitDate": "2008-11-25T08:43:49.000Z",
      "level": "method",
      "lineNumber": [
        283,
        285
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Prevents Guice from injecting dependencies that form a cycle, unless broken by a {@link\nProvider}. By default, circular dependencies are not disabled.",
      "id": 103,
      "index": [
        2,
        152
      ],
      "language": "java",
      "lastCommitDate": "2010-12-13T02:44:36.000Z",
      "level": "method",
      "lineNumber": [
        290,
        291
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>If a parent injector disables circular dependencies, then all child injectors (and private\nmodules within that injector) also disable circular dependencies. If a parent does not disable\ncircular dependencies, a child injector or private module may optionally declare itself as\ndisabling circular dependencies. If it does, the behavior is limited only to that child or any\ngrandchildren. No siblings of the child will disable circular dependencies.",
      "id": 104,
      "index": [
        2,
        452
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        293,
        297
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "",
      "content": "@since 3.0",
      "id": 105,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2015-12-13T19:14:24.000Z",
      "level": "method",
      "lineNumber": [
        299,
        299
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Requires that Guice finds an exactly matching binding annotation. This disables the error-prone\nfeature in Guice where it can substitute a binding for <code>{@literal @}Named Foo</code> when\nattempting to inject <code>{@literal @}Named(\"foo\") Foo</code>.",
      "id": 106,
      "index": [
        2,
        256
      ],
      "language": "java",
      "lastCommitDate": "2013-05-16T18:00:54.000Z",
      "level": "method",
      "lineNumber": [
        304,
        306
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@since 4.0",
      "id": 107,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2013-05-16T18:00:54.000Z",
      "level": "method",
      "lineNumber": [
        308,
        308
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Adds a scanner that will look in all installed modules for annotations the scanner can parse,\nand binds them like {@literal @}Provides methods. Scanners apply to all modules installed in\nthe injector. Scanners installed in child injectors or private modules do not impact modules in\nsiblings or parents, however scanners installed in parents do apply to all child injectors and\nprivate modules.",
      "id": 108,
      "index": [
        2,
        396
      ],
      "language": "java",
      "lastCommitDate": "2015-02-20T02:36:52.000Z",
      "level": "method",
      "lineNumber": [
        313,
        317
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "summary",
        "expand"
      ]
    },
    {
      "className": "",
      "content": "@since 4.0",
      "id": 109,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2015-02-20T02:36:52.000Z",
      "level": "method",
      "lineNumber": [
        319,
        319
      ],
      "relativePath": "/core/src/com/google/inject/Binder.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/Binding.java": [
    {
      "className": "",
      "content": "A mapping from a {@link Key} to the strategy for getting instances of the type. This interface is\npart of the introspection API and is intended primarily for use by tools.",
      "id": 110,
      "index": [
        0,
        171
      ],
      "language": "java",
      "lastCommitDate": "2007-02-02T00:21:07.000Z",
      "level": "inline",
      "lineNumber": [
        6,
        7
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Bindings are created in several ways:",
      "id": 111,
      "index": [
        0,
        40
      ],
      "language": "java",
      "lastCommitDate": "2008-07-30T07:02:32.000Z",
      "level": "inline",
      "lineNumber": [
        9,
        9
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<li>Explicitly in a module, via {@code bind()} and {@code bindConstant()} statements:",
      "id": 112,
      "index": [
        0,
        85
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T06:40:18.000Z",
      "level": "inline",
      "lineNumber": [
        12,
        12
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "bind(Service.class).annotatedWith(Red.class).to(ServiceImpl.class);\n    bindConstant().annotatedWith(ServerHost.class).to(args[0]);</pre>\n  <li>Implicitly by the Injector by following a type's {@link ImplementedBy pointer} {@link\n      ProvidedBy annotations} or by using its {@link Inject annotated} or default constructor.\n  <li>By converting a bound instance to a different type.\n  <li>For {@link Provider providers}, by delegating to the binding for the provided type.",
      "id": 113,
      "index": [
        0,
        472
      ],
      "language": "java",
      "lastCommitDate": "2021-02-11T00:50:52.000Z",
      "level": "inline",
      "lineNumber": [
        14,
        19
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<p>They exist on both modules and on injectors, and their behaviour is different for each:",
      "id": 114,
      "index": [
        0,
        90
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T06:40:18.000Z",
      "level": "inline",
      "lineNumber": [
        22,
        22
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<li><strong>Module bindings</strong> are incomplete and cannot be used to provide instances.\n      This is because the applicable scopes and interceptors may not be known until an injector\n      is created. From a tool's perspective, module bindings are like the injector's source code.\n      They can be inspected or rewritten, but this analysis must be done statically.\n  <li><strong>Injector bindings</strong> are complete and valid and can be used to provide\n      instances. From a tools' perspective, injector bindings are like reflection for an\n      injector. They have full runtime information, including the complete graph of injections\n      necessary to satisfy a binding.",
      "id": 115,
      "index": [
        0,
        684
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T06:40:18.000Z",
      "level": "inline",
      "lineNumber": [
        25,
        32
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage",
        "rational"
      ]
    },
    {
      "className": "",
      "content": "@param <T> the bound type. The injected is always assignable to this type.\n@author crazybob@google.com (Bob Lee)\n@author jessewilson@google.com (Jesse Wilson)",
      "id": 116,
      "index": [
        0,
        158
      ],
      "language": "java",
      "lastCommitDate": "2007-02-02T00:21:07.000Z",
      "level": "inline",
      "lineNumber": [
        35,
        37
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the key for this binding.",
      "id": 117,
      "index": [
        6,
        39
      ],
      "language": "java",
      "lastCommitDate": "2025-06-07T13:27:29.000Z",
      "level": "method",
      "lineNumber": [
        42,
        42
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Returns the scoped provider guice uses to fulfill requests for this binding.",
      "id": 118,
      "index": [
        2,
        78
      ],
      "language": "java",
      "lastCommitDate": "2007-02-02T00:21:07.000Z",
      "level": "method",
      "lineNumber": [
        45,
        45
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@throws UnsupportedOperationException when invoked on a {@link Binding} created via {@link\n    com.google.inject.spi.Elements#getElements}. This method is only supported on {@link\n    Binding}s returned from an injector.",
      "id": 119,
      "index": [
        2,
        222
      ],
      "language": "java",
      "lastCommitDate": "2008-07-28T07:05:14.000Z",
      "level": "method",
      "lineNumber": [
        47,
        49
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Accepts a target visitor. Invokes the visitor method specific to this binding's target.",
      "id": 120,
      "index": [
        2,
        89
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T07:37:13.000Z",
      "level": "method",
      "lineNumber": [
        54,
        54
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param visitor to call back on\n@since 2.0",
      "id": 121,
      "index": [
        2,
        43
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T07:37:13.000Z",
      "level": "method",
      "lineNumber": [
        56,
        57
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Accepts a scoping visitor. Invokes the visitor method specific to this binding's scoping.",
      "id": 122,
      "index": [
        2,
        91
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T07:37:13.000Z",
      "level": "method",
      "lineNumber": [
        62,
        62
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param visitor to call back on\n@since 2.0",
      "id": 123,
      "index": [
        2,
        43
      ],
      "language": "java",
      "lastCommitDate": "2008-08-01T07:37:13.000Z",
      "level": "method",
      "lineNumber": [
        64,
        65
      ],
      "relativePath": "/core/src/com/google/inject/Binding.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/Injector.java": [
    {
      "className": "",
      "content": "Builds the graphs of objects that make up your application. The injector tracks the dependencies\nfor each type and uses bindings to inject them. This is the core of Guice, although you rarely\ninteract with it directly. This \"behind-the-scenes\" operation is what distinguishes dependency\ninjection from its cousin, the service locator pattern.",
      "id": 251,
      "index": [
        0,
        342
      ],
      "language": "java",
      "lastCommitDate": "2006-08-25T02:01:19.000Z",
      "level": "inline",
      "lineNumber": [
        10,
        13
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Contains several default bindings:",
      "id": 252,
      "index": [
        0,
        37
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T21:47:19.000Z",
      "level": "inline",
      "lineNumber": [
        15,
        15
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<li>This {@link Injector} instance itself\n  <li>A {@code Provider<T>} for each binding of type {@code T}\n  <li>The {@link java.util.logging.Logger} for the class being injected\n  <li>The {@link Stage} in which the Injector was created",
      "id": 253,
      "index": [
        0,
        234
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T21:47:19.000Z",
      "level": "inline",
      "lineNumber": [
        18,
        21
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Injectors are created using the facade class {@link Guice}.",
      "id": 254,
      "index": [
        0,
        59
      ],
      "language": "java",
      "lastCommitDate": "2007-02-15T19:23:13.000Z",
      "level": "inline",
      "lineNumber": [
        24,
        24
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>An injector can also {@link #injectMembers(Object) inject the dependencies} of\nalready-constructed instances. This can be used to interoperate with objects created by other\nframeworks or services.",
      "id": 255,
      "index": [
        0,
        199
      ],
      "language": "java",
      "lastCommitDate": "2007-02-27T07:38:03.000Z",
      "level": "inline",
      "lineNumber": [
        26,
        28
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>Injectors can be {@link #createChildInjector(Iterable) hierarchical}. Child injectors inherit\nthe configuration of their parent injectors, but the converse does not hold.",
      "id": 256,
      "index": [
        0,
        173
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "inline",
      "lineNumber": [
        30,
        31
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>The injector's {@link #getBindings() internal bindings} are available for introspection. This\nenables tools and extensions to operate on an injector reflectively.",
      "id": 257,
      "index": [
        0,
        165
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "inline",
      "lineNumber": [
        33,
        34
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)\n@author jessewilson@google.com (Jesse Wilson)",
      "id": 258,
      "index": [
        0,
        83
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "inline",
      "lineNumber": [
        36,
        37
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "",
      "content": "Injects dependencies into the fields and methods of {@code instance}. Ignores the presence or\nabsence of an injectable constructor.",
      "id": 259,
      "index": [
        2,
        133
      ],
      "language": "java",
      "lastCommitDate": "2006-08-25T02:01:19.000Z",
      "level": "method",
      "lineNumber": [
        42,
        43
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Whenever Guice creates an instance, it performs this injection automatically (after first\nperforming constructor injection), so if you're able to let Guice create all your objects for\nyou, you'll never need to use this method.",
      "id": 260,
      "index": [
        2,
        231
      ],
      "language": "java",
      "lastCommitDate": "2007-03-13T02:16:16.000Z",
      "level": "method",
      "lineNumber": [
        45,
        47
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "",
      "content": "@param instance to inject members on\n@see Binder#getMembersInjector(Class) for a preferred alternative that supports checks before\n    run time",
      "id": 261,
      "index": [
        2,
        145
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        49,
        51
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the members injector used to inject dependencies into methods and fields on instances\nof the given type {@code T}.",
      "id": 262,
      "index": [
        2,
        124
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        56,
        57
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param InjectionPoint type to get members injector for\n@see Binder#getMembersInjector(TypeLiteral) for an alternative that offers up front error\n    detection\n@since 2.0",
      "id": 263,
      "index": [
        2,
        171
      ],
      "language": "java",
      "lastCommitDate": "2005-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        59,
        62
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the members injector used to inject dependencies into methods and fields on instances\nof the given type {@code T}. When feasible, use {@link Binder#getMembersInjector(TypeLiteral)}\ninstead to get increased up front error detection.",
      "id": 264,
      "index": [
        2,
        241
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        67,
        69
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@param type type to get members injector for\n@see Binder#getMembersInjector(Class) for an alternative that offers up front error detection\n@since 2.0",
      "id": 265,
      "index": [
        2,
        151
      ],
      "language": "java",
      "lastCommitDate": "2009-03-18T05:34:39.000Z",
      "level": "method",
      "lineNumber": [
        71,
        73
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns this injector's <strong>explicit</strong> bindings.",
      "id": 266,
      "index": [
        2,
        61
      ],
      "language": "java",
      "lastCommitDate": "2006-11-21T01:27:08.000Z",
      "level": "method",
      "lineNumber": [
        78,
        78
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>The returned map does not include bindings inherited from a {@link #getParent() parent\ninjector}, should one exist. The returned map is guaranteed to iterate (for example, with its\n{@link Map#entrySet()} iterator) in the order of insertion. In other words, the order in which\nbindings appear in user Modules.",
      "id": 267,
      "index": [
        2,
        313
      ],
      "language": "java",
      "lastCommitDate": "2007-09-07T03:20:30.000Z",
      "level": "method",
      "lineNumber": [
        80,
        83
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 268,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        86,
        86
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a snapshot of this injector's bindings, <strong>both explicit and\njust-in-time</strong>. The returned map is immutable; it contains only the bindings that were\npresent when {@code getAllBindings()} was invoked. Just-in-time bindings are only present if\nthey have been requested at least once. Subsequent calls may return a map with additional\njust-in-time bindings.",
      "id": 269,
      "index": [
        2,
        375
      ],
      "language": "java",
      "lastCommitDate": "2009-07-04T16:20:55.000Z",
      "level": "method",
      "lineNumber": [
        91,
        95
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>The returned map does not include bindings inherited from a {@link #getParent() parent\ninjector}, should one exist.",
      "id": 270,
      "index": [
        2,
        120
      ],
      "language": "java",
      "lastCommitDate": "2009-07-04T16:20:55.000Z",
      "level": "method",
      "lineNumber": [
        97,
        98
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 271,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2009-07-04T16:20:55.000Z",
      "level": "method",
      "lineNumber": [
        100,
        100
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@since 3.0",
      "id": 272,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        102,
        102
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the binding for the given injection key. This will be an explicit bindings if the key\nwas bound explicitly by a module, or an implicit binding otherwise. The implicit binding will\nbe created if necessary.",
      "id": 273,
      "index": [
        2,
        214
      ],
      "language": "java",
      "lastCommitDate": "2007-02-02T00:21:07.000Z",
      "level": "method",
      "lineNumber": [
        107,
        109
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 274,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        111,
        111
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@throws ConfigurationException if this injector cannot find or create the binding.",
      "id": 275,
      "index": [
        2,
        84
      ],
      "language": "java",
      "lastCommitDate": "2005-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        113,
        113
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the binding for the given type. This will be an explicit bindings if the injection key\nwas bound explicitly by a module, or an implicit binding otherwise. The implicit binding will\nbe created if necessary.",
      "id": 276,
      "index": [
        2,
        215
      ],
      "language": "java",
      "lastCommitDate": "2007-09-07T16:52:39.000Z",
      "level": "method",
      "lineNumber": [
        118,
        120
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 277,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2007-09-07T16:52:39.000Z",
      "level": "method",
      "lineNumber": [
        122,
        122
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@param key the injection key to get the binding for\n@throws ConfigurationException if this injector cannot find or create the binding.\n@since 2.0",
      "id": 278,
      "index": [
        2,
        147
      ],
      "language": "java",
      "lastCommitDate": "2005-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        124,
        126
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the binding if it already exists, or null if does not exist. Unlike {@link\n#getBinding(Key)}, this does not attempt to create just-in-time bindings for keys that aren't\nbound.",
      "id": 279,
      "index": [
        2,
        185
      ],
      "language": "java",
      "lastCommitDate": "2010-03-10T22:18:52.000Z",
      "level": "method",
      "lineNumber": [
        131,
        133
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 280,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        135,
        135
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@since 3.0",
      "id": 281,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        137,
        137
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns all explicit bindings for {@code type}.",
      "id": 282,
      "index": [
        2,
        49
      ],
      "language": "java",
      "lastCommitDate": "2007-02-03T02:10:13.000Z",
      "level": "method",
      "lineNumber": [
        142,
        142
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 283,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        144,
        144
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@Deprecated use {@link #getProvider(Dependency)} instead.",
      "id": 284,
      "index": [
        2,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        146,
        146
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": []
    },
    {
      "className": "",
      "content": "Returns the provider used to obtain instances for the given injection key. When feasible, avoid\nusing this method, in favor of having Guice inject your dependencies ahead of time.",
      "id": 285,
      "index": [
        2,
        181
      ],
      "language": "java",
      "lastCommitDate": "2007-02-18T22:11:51.000Z",
      "level": "method",
      "lineNumber": [
        152,
        153
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@throws ConfigurationException if this injector cannot find or create the provider.\n@see Binder#getProvider(Key) for an alternative that offers up front error detection",
      "id": 286,
      "index": [
        2,
        170
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        155,
        156
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the provider used to obtain instances for the given type. When feasible, avoid using\nthis method, in favor of having Guice inject your dependencies ahead of time.",
      "id": 287,
      "index": [
        2,
        172
      ],
      "language": "java",
      "lastCommitDate": "2007-02-18T22:11:51.000Z",
      "level": "method",
      "lineNumber": [
        161,
        162
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@throws ConfigurationException if this injector cannot find or create the provider.\n@see Binder#getProvider(Class) for an alternative that offers up front error detection",
      "id": 288,
      "index": [
        2,
        172
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        164,
        165
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the appropriate instance for the given injection key; equivalent to {@code\ngetProvider(key).get()}. When feasible, avoid using this method, in favor of having Guice\ninject your dependencies ahead of time.",
      "id": 289,
      "index": [
        2,
        214
      ],
      "language": "java",
      "lastCommitDate": "2007-02-28T22:54:06.000Z",
      "level": "method",
      "lineNumber": [
        170,
        172
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@throws ConfigurationException if this injector cannot find or create the provider.\n@throws ProvisionException if there was a runtime failure while providing an instance.",
      "id": 290,
      "index": [
        2,
        172
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        174,
        175
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the appropriate instance for the given injection type; equivalent to {@code\ngetProvider(type).get()}. When feasible, avoid using this method, in favor of having Guice\ninject your dependencies ahead of time.",
      "id": 291,
      "index": [
        2,
        216
      ],
      "language": "java",
      "lastCommitDate": "2007-02-28T22:54:06.000Z",
      "level": "method",
      "lineNumber": [
        180,
        182
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "deprecate in 5.0, use {@link #getProvider(Class)} instead.",
      "id": 292,
      "index": [
        2,
        60
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        184,
        184
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@throws ConfigurationException if this injector cannot find or create the provider.\n@throws ProvisionException if there was a runtime failure while providing an instance.",
      "id": 293,
      "index": [
        2,
        172
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        186,
        187
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns this injector's parent, or {@code null} if this is a top-level injector.",
      "id": 294,
      "index": [
        2,
        82
      ],
      "language": "java",
      "lastCommitDate": "2008-10-18T19:50:49.000Z",
      "level": "method",
      "lineNumber": [
        192,
        192
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@since 2.0",
      "id": 295,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2008-11-18T07:01:33.000Z",
      "level": "method",
      "lineNumber": [
        194,
        194
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a new injector that inherits all state from this injector. All bindings, scopes,\ninterceptors and type converters are inherited -- they are visible to the child injector.\nElements of the child injector are not visible to its parent.",
      "id": 296,
      "index": [
        2,
        242
      ],
      "language": "java",
      "lastCommitDate": "2008-10-14T23:35:56.000Z",
      "level": "method",
      "lineNumber": [
        199,
        201
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Just-in-time bindings created for child injectors will be created in an ancestor injector\nwhenever possible. This allows for scoped instances to be shared between injectors. Use\nexplicit bindings to prevent bindings from being shared with the parent injector. Optional\ninjections in just-in-time bindings (created in the parent injector) may be silently ignored if\nthe optional dependencies are from the child injector.",
      "id": 297,
      "index": [
        2,
        424
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        203,
        207
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>No key may be bound by both an injector and one of its ancestors. This includes just-in-time\nbindings. The lone exception is the key for {@code Injector.class}, which is bound by each\ninjector to itself.",
      "id": 298,
      "index": [
        2,
        208
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        209,
        211
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "rational"
      ]
    },
    {
      "className": "",
      "content": "<p>When using hierarchical injectors (via {@link Binder#newPrivateBinder}, {@link\nBinder#PrivateModule}, or {@link Injector#createChildInjector}), extra care is required to\nensure that bindings are associated with the correct injector. Statements that are otherwise\nunnecessary - such as {code bind(ServiceImpl.class);} - become critical to associate the\nbinding with <i>this particular injector</i>, otherwise Guice may promote the binding to an\nancestor injector. Linked bindings such as {@code bind(Service.class).to(ServiceImpl.class);}\nwill only associate the {@code Service} binding with the current injector; {@code ServiceImpl}\nwill still be promoted to an ancestor injector without an explicit {@code\nbind(ServiceImpl.class);} statement.",
      "id": 299,
      "index": [
        2,
        748
      ],
      "language": "java",
      "lastCommitDate": "2008-11-18T07:01:33.000Z",
      "level": "method",
      "lineNumber": [
        213,
        221
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage",
        "rational"
      ]
    },
    {
      "className": "",
      "content": "@since 2.0",
      "id": 300,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2023-04-19T18:07:59.000Z",
      "level": "method",
      "lineNumber": [
        223,
        223
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a new injector that inherits all state from this injector. All bindings, scopes,\ninterceptors and type converters are inherited -- they are visible to the child injector.\nElements of the child injector are not visible to its parent.",
      "id": 301,
      "index": [
        2,
        242
      ],
      "language": "java",
      "lastCommitDate": "2008-10-14T23:35:56.000Z",
      "level": "method",
      "lineNumber": [
        228,
        230
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Just-in-time bindings created for child injectors will be created in an ancestor injector\nwhenever possible. This allows for scoped instances to be shared between injectors. Use\nexplicit bindings to prevent bindings from being shared with the parent injector.",
      "id": 302,
      "index": [
        2,
        264
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        232,
        234
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>No key may be bound by both an injector and one of its ancestors. This includes just-in-time\nbindings. The lone exception is the key for {@code Injector.class}, which is bound by each\ninjector to itself.",
      "id": 303,
      "index": [
        2,
        208
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T00:12:39.000Z",
      "level": "method",
      "lineNumber": [
        236,
        238
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "",
      "content": "<p><b> legacy:</b> In v4.0 and later, prefer using {@link #createChildInjector(Iterable)} for\ncreating child injectors. This method is retained for compatibility, but it is recommended \nto use the iterable version for consistency and flexibility.**",
      "id": 304,
      "index": [
        2,
        250
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        240,
        242
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "pointer",
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@since 2.0",
      "id": 305,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2008-11-18T07:01:33.000Z",
      "level": "method",
      "lineNumber": [
        244,
        244
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a map containing all scopes in the injector. The maps keys are scoping annotations like\n{@code Singleton.class}, and the values are scope instances, such as {@code Scopes.SINGLETON}.\nThe returned map is immutable.",
      "id": 306,
      "index": [
        2,
        223
      ],
      "language": "java",
      "lastCommitDate": "2009-07-24T00:48:12.000Z",
      "level": "method",
      "lineNumber": [
        249,
        251
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.\n@since 3.0",
      "id": 307,
      "index": [
        2,
        101
      ],
      "language": "java",
      "lastCommitDate": "2009-07-24T00:48:12.000Z",
      "level": "method",
      "lineNumber": [
        253,
        254
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns a set containing all type converter bindings in the injector. The returned set is\nimmutable.",
      "id": 308,
      "index": [
        2,
        102
      ],
      "language": "java",
      "lastCommitDate": "2010-11-19T02:33:32.000Z",
      "level": "method",
      "lineNumber": [
        259,
        260
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 309,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        262,
        262
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@return Map<TypeConverterBinding> this returns a map of scope annotations to their corresponding scope instances.",
      "id": 310,
      "index": [
        2,
        115
      ],
      "language": "java",
      "lastCommitDate": "2005-06-07T13:27:32.000Z",
      "level": "method",
      "lineNumber": [
        264,
        264
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@since 3.0",
      "id": 311,
      "index": [
        2,
        12
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:49:50.000Z",
      "level": "method",
      "lineNumber": [
        266,
        266
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the elements that make up this injector. Note that not all kinds of elements are\nreturned.",
      "id": 312,
      "index": [
        2,
        100
      ],
      "language": "java",
      "lastCommitDate": "2019-01-24T15:43:41.000Z",
      "level": "method",
      "lineNumber": [
        271,
        272
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>The returned list does not include elements inherited from a {@link #getParent() parent\ninjector}, should one exist.",
      "id": 313,
      "index": [
        2,
        121
      ],
      "language": "java",
      "lastCommitDate": "2019-01-24T15:43:41.000Z",
      "level": "method",
      "lineNumber": [
        274,
        275
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>The returned list is immutable; it contains only the elements that were present when {@link\n#getElements} was invoked. Subsequent calls may return a list with additional elements.",
      "id": 314,
      "index": [
        2,
        184
      ],
      "language": "java",
      "lastCommitDate": "2019-01-24T15:43:41.000Z",
      "level": "method",
      "lineNumber": [
        277,
        278
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>The returned list does not include data inherited from a {@link #getParent() parent\ninjector}, should one exist.",
      "id": 315,
      "index": [
        2,
        117
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        280,
        281
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 316,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        283,
        283
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@param Element the type of elements required as input by this method\n@since 4.2.3",
      "id": 317,
      "index": [
        2,
        83
      ],
      "language": "java",
      "lastCommitDate": "2025-06-06T12:55:13.000Z",
      "level": "method",
      "lineNumber": [
        285,
        286
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Returns the injection points created for calls to {@link #getMembersInjector} (either directly\nor indirectly, e.g. through {@link #injectMembers}.",
      "id": 318,
      "index": [
        2,
        148
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        291,
        292
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>This excludes any injection points from elements (which are accessible from each element via\nthe SPI), unless {@link #getMembersInjector} or {@link #injectMembers} were also called for the\nsame key.",
      "id": 319,
      "index": [
        2,
        203
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        294,
        296
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>The returned multimap does not include data inherited from a {@link #getParent() parent\ninjector}, should one exist.",
      "id": 320,
      "index": [
        2,
        121
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        298,
        299
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>This method is part of the Guice SPI and is intended for use by tools and extensions.",
      "id": 321,
      "index": [
        2,
        90
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        301,
        301
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "<p> Refactoring needed to support multiple injection points for the same type. Method will be \nremoved in 5.0.  **",
      "id": 322,
      "index": [
        2,
        116
      ],
      "language": "java",
      "lastCommitDate": "2019-03-31T08:24:56.000Z",
      "level": "method",
      "lineNumber": [
        303,
        304
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "",
      "content": "@since 4.2.3",
      "id": 323,
      "index": [
        2,
        14
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        306,
        306
      ],
      "relativePath": "/core/src/com/google/inject/Injector.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/Module.java": [
    {
      "className": "",
      "content": "A module contributes configuration information, typically interface bindings, which will be used\nto create an {@link Injector}. A Guice-based application is ultimately composed of little more\nthan a set of {@code Module}s and some bootstrapping code.",
      "id": 589,
      "index": [
        0,
        250
      ],
      "language": "java",
      "lastCommitDate": "2006-12-02T00:20:36.000Z",
      "level": "inline",
      "lineNumber": [
        2,
        4
      ],
      "relativePath": "/core/src/com/google/inject/Module.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>Your Module classes can use a more streamlined syntax by extending {@link AbstractModule}\nrather than implementing this interface directly.",
      "id": 590,
      "index": [
        0,
        142
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T21:47:19.000Z",
      "level": "inline",
      "lineNumber": [
        6,
        7
      ],
      "relativePath": "/core/src/com/google/inject/Module.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "<p>In addition to the bindings configured via {@link #configure}, bindings will be created for\nall methods annotated with {@literal @}{@link Provides}. Use scope and binding annotations on\nthese methods to configure the bindings.",
      "id": 591,
      "index": [
        0,
        229
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T22:59:59.000Z",
      "level": "inline",
      "lineNumber": [
        9,
        11
      ],
      "relativePath": "/core/src/com/google/inject/Module.java",
      "type": [
        "summary",
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "Contributes bindings and other configurations for this module to {@code binder}.",
      "id": 592,
      "index": [
        2,
        82
      ],
      "language": "java",
      "lastCommitDate": "2007-01-20T02:05:20.000Z",
      "level": "method",
      "lineNumber": [
        17,
        17
      ],
      "relativePath": "/core/src/com/google/inject/Module.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p><strong>Do not invoke this method directly</strong> to install submodules. Instead use\n{@link Binder#install(Module)}, which ensures that {@link Provides provider methods} are\ndiscovered.",
      "id": 593,
      "index": [
        2,
        192
      ],
      "language": "java",
      "lastCommitDate": "2008-09-05T22:30:40.000Z",
      "level": "method",
      "lineNumber": [
        19,
        21
      ],
      "relativePath": "/core/src/com/google/inject/Module.java",
      "type": [
        "summary",
        "pointer"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/binder/ScopedBindingBuilder.java": [
    {
      "className": "",
      "content": "See the EDSL examples at {@link com.google.inject.Binder}.",
      "id": 32,
      "index": [
        0,
        58
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T21:47:19.000Z",
      "level": "inline",
      "lineNumber": [
        5,
        5
      ],
      "relativePath": "/core/src/com/google/inject/binder/ScopedBindingBuilder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)",
      "id": 33,
      "index": [
        0,
        37
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T21:47:19.000Z",
      "level": "inline",
      "lineNumber": [
        7,
        7
      ],
      "relativePath": "/core/src/com/google/inject/binder/ScopedBindingBuilder.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "",
      "content": "See the EDSL examples at {@link com.google.inject.Binder}.",
      "id": 34,
      "index": [
        6,
        64
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T17:22:07.000Z",
      "level": "method",
      "lineNumber": [
        12,
        12
      ],
      "relativePath": "/core/src/com/google/inject/binder/ScopedBindingBuilder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "See the EDSL examples at {@link com.google.inject.Binder}.",
      "id": 35,
      "index": [
        6,
        64
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T17:22:07.000Z",
      "level": "method",
      "lineNumber": [
        15,
        15
      ],
      "relativePath": "/core/src/com/google/inject/binder/ScopedBindingBuilder.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Instructs the {@link com.google.inject.Injector} to eagerly initialize this singleton-scoped\nbinding upon creation. Useful for application initialization logic. See the EDSL examples at\n{@link com.google.inject.Binder}.",
      "id": 36,
      "index": [
        2,
        221
      ],
      "language": "java",
      "lastCommitDate": "2007-02-20T21:47:19.000Z",
      "level": "method",
      "lineNumber": [
        18,
        20
      ],
      "relativePath": "/core/src/com/google/inject/binder/ScopedBindingBuilder.java",
      "type": [
        "summary"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/binder/package-info.java": [
    {
      "className": "",
      "content": "Interfaces which make up {@link com.google.inject.Binder}'s expression language.",
      "id": 31,
      "index": [
        4,
        84
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T17:22:07.000Z",
      "level": "inline",
      "lineNumber": [
        0,
        0
      ],
      "relativePath": "/core/src/com/google/inject/binder/package-info.java",
      "type": [
        "summary"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java": [
    {
      "className": "",
      "content": "Contains abstractions for enforcing {@link RestrictedBindingSource}.",
      "id": 124,
      "index": [
        0,
        68
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        30,
        30
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Enforcement happens in two phases:",
      "id": 125,
      "index": [
        0,
        37
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        32,
        32
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "<li>Data structures for enforcement are built during Binder configuration. {@link\n      PermitMapConstruction} encapsulates this process, and the {@link PermitMap} is the end\n      result.\n  <li>Restrictions are enforced by checking each binding for violations with {@link #check},\n      which uses the {@link PermitMap}(s) built during Binder configuration.",
      "id": 126,
      "index": [
        0,
        358
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        35,
        39
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "<p>Note: None of this is thread-safe because it's only used while the Injector is being built,\nwhich happens on a single thread.",
      "id": 127,
      "index": [
        0,
        128
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        42,
        43
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@author vzm@google.com (Vladimir Makaric)\n@since 5.0",
      "id": 128,
      "index": [
        0,
        52
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        45,
        46
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Mapping between an element source and its permit annotations.",
      "id": 129,
      "index": [
        6,
        67
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        54,
        54
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns a suggestion for how a restricted binding should be created in case it's missing.",
      "id": 130,
      "index": [
        6,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        61,
        61
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns all the restriction violations found on the given Module Elements, as error messages.",
      "id": 131,
      "index": [
        2,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        76,
        76
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>Note: Intended to be used on Module Elements, not Injector Elements, ie. the result of\n{@link Elements#getElements} not {@code Injector.getElements}. The Module Elements this check\ncares about are:",
      "id": 132,
      "index": [
        2,
        202
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        78,
        80
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<li>Module Bindings, which are always explicit and always have an {@link ElementSource} (with\n      a Module Stack), unlike Injector Bindings, which may be implicit and bereft of an\n      ElementSource.\n  <li>{@link PrivateElements}, which represent the recursive case of this check. They contain a\n      list of elements that this check is recursively called on.",
      "id": 133,
      "index": [
        2,
        365
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        83,
        87
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Clear all the permit maps after the checks are done.",
      "id": 134,
      "index": [
        7,
        59
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        94,
        94
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Base case.",
      "id": 135,
      "index": [
        13,
        23
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        110,
        110
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Base case.",
      "id": 136,
      "index": [
        13,
        23
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        116,
        116
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Recursive case.",
      "id": 137,
      "index": [
        13,
        28
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        126,
        126
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Module Bindings are all explicit and have an ElementSource.",
      "id": 138,
      "index": [
        7,
        66
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        136,
        136
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Get all permits on the element source chain.",
      "id": 139,
      "index": [
        6,
        50
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        176,
        176
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "TODO(b/156759807): Switch to Streams.stream (instead of inlining it).",
      "id": 140,
      "index": [
        7,
        76
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        196,
        196
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Base case.",
      "id": 141,
      "index": [
        13,
        23
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        213,
        213
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Some Module Elements, like Message, don't always have an ElementSource.",
      "id": 142,
      "index": [
        15,
        86
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        217,
        217
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Recursive case.",
      "id": 143,
      "index": [
        13,
        28
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        224,
        224
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns the restriction on the given key (null if there is none).",
      "id": 144,
      "index": [
        2,
        67
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        240,
        240
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "If the key is annotated then only the annotation restriction matters, the type restriction is\nignored (an annotated type is essentially a new type).",
      "id": 145,
      "index": [
        2,
        150
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        242,
        243
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Builds the map from each module to all the permit annotations on its module stack.",
      "id": 146,
      "index": [
        2,
        84
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        252,
        252
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>Bindings refer to the module that created them via a {@link ModuleSource}. The map built\nhere maps a module's {@link ModuleSource} to all the {@link RestrictedBindingSource.Permit}\nannotations found on the path from the root of the module hierarchy to it. This path contains\nall the modules that transitively install the module (including the module itself). This path\nis also known as the module stack.",
      "id": 147,
      "index": [
        2,
        408
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        254,
        258
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>The map is built by piggybacking on the depth-first traversal of the module hierarchy during\nBinder configuration.",
      "id": 148,
      "index": [
        2,
        119
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        260,
        261
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Maintains the permits on the current module installation path.",
      "id": 149,
      "index": [
        7,
        69
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        281,
        281
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Stack tracking the currentModulePermits during module traversal.",
      "id": 150,
      "index": [
        7,
        71
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        283,
        283
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Returns a possibly unfinished map. The map should only be used after the construction is\nfinished.",
      "id": 151,
      "index": [
        4,
        102
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        288,
        289
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Sets the permits on the current module installation path to the permits on the given module\nsource so that subsequently installed modules may inherit them. Used only for method\nscanning, so that modules installed by scanners inherit permits from the method's module.",
      "id": 152,
      "index": [
        4,
        270
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        296,
        298
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Called by the Binder prior to entering a module's configure method.",
      "id": 153,
      "index": [
        8,
        75
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        305,
        305
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Save the parent module's permits so that they can be restored when the Binder exits this",
      "id": 154,
      "index": [
        9,
        97
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        311,
        311
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "new (child) module's configure method.",
      "id": 155,
      "index": [
        9,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        312,
        312
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Called by the Binder when it exits a module's configure method.",
      "id": 156,
      "index": [
        8,
        71
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        324,
        324
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Restore the parent module's permits.",
      "id": 157,
      "index": [
        9,
        45
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        326,
        326
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Finishes the {@link PermitMap}. Called by the Binder when all modules are installed.",
      "id": 158,
      "index": [
        8,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        330,
        330
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Pick up annotations on anonymous classes (e.g. new @Bar Foo() { ... }):",
      "id": 159,
      "index": [
        7,
        78
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        344,
        344
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "force wildcard alignment",
      "id": 160,
      "index": [
        38,
        62
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        350,
        350
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_1.java",
      "type": [
        "expand"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java": [
    {
      "className": "",
      "content": "Contains abstractions for enforcing {@link RestrictedBindingSource}.",
      "id": 161,
      "index": [
        0,
        68
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        30,
        30
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Note: None of this is thread-safe because it's only used while the Injector is being built,\nwhich happens on a single thread.",
      "id": 162,
      "index": [
        0,
        128
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        32,
        33
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@author vzm@google.com (Vladimir Makaric)\n@since 5.0",
      "id": 163,
      "index": [
        0,
        52
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        35,
        36
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@author vzm@google.com (Vladimir Makaric)\n@since 5.0",
      "id": 164,
      "index": [
        2,
        54
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        44,
        45
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns all the restriction violations found on the given Module Elements, as error messages.",
      "id": 165,
      "index": [
        2,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        69,
        69
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>Note: Intended to be used on Module Elements, not Injector Elements, ie. the result of\n{@link Elements#getElements} not {@code Injector.getElements}.",
      "id": 166,
      "index": [
        2,
        154
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        71,
        72
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Clear all the permit maps after the checks are done.",
      "id": 167,
      "index": [
        7,
        59
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        78,
        78
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@Deprecated use {@link #check(Dependency)} instead.",
      "id": 168,
      "index": [
        5,
        56
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        92,
        92
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@see Binder#getProvider(Class) for an alternative that offers up front error detection",
      "id": 169,
      "index": [
        5,
        91
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        143,
        143
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Get all permits on the element source chain.",
      "id": 170,
      "index": [
        6,
        50
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        159,
        159
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@since 2.0 you can use isExempt(ElementSource elementSource) instead",
      "id": 171,
      "index": [
        5,
        73
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        174,
        174
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "TODO(b/156759807): Switch to Streams.stream (instead of inlining it).",
      "id": 172,
      "index": [
        7,
        76
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        180,
        180
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@since 2.0 you can use getAllModules instead",
      "id": 173,
      "index": [
        5,
        49
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        185,
        185
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Some Module Elements, like Message, don't always have an ElementSource.",
      "id": 174,
      "index": [
        15,
        86
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        201,
        201
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Recursive case.",
      "id": 175,
      "index": [
        13,
        28
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        208,
        208
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "legacy:</b> In v4.0 and later, prefer using {@link #createChildInjector(Iterable)} for\\ncreating child injectors. This method is retained for compatibility, but it is recommended \\nto use the iterable version for consistency and flexibility",
      "id": 176,
      "index": [
        5,
        245
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        217,
        217
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "expand",
        "deprecation"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns the restriction on the given key (null if there is none).",
      "id": 177,
      "index": [
        2,
        67
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        225,
        225
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "If the key is annotated then only the annotation restriction matters, the type restriction is\nignored (an annotated type is essentially a new type).",
      "id": 178,
      "index": [
        2,
        150
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        227,
        228
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Builds the map from each module to all the permit annotations on its module stack.",
      "id": 179,
      "index": [
        2,
        84
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        237,
        237
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>Bindings refer to the module that created them via a {@link ModuleSource}. The map built\nhere maps a module's {@link ModuleSource} to all the {@link RestrictedBindingSource.Permit}\nannotations found on the path from the root of the module hierarchy to it. This path contains\nall the modules that transitively install the module (including the module itself). This path\nis also known as the module stack.",
      "id": 180,
      "index": [
        2,
        408
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        239,
        243
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Stack tracking the currentModulePermits during module traversal.",
      "id": 181,
      "index": [
        7,
        71
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        264,
        264
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Returns a possibly unfinished map. The map should only be used after the construction is\nfinished.",
      "id": 182,
      "index": [
        4,
        102
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        269,
        270
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Sets the permits on the current module installation path to the permits on the given module\nsource so that subsequently installed modules may inherit them. Used only for method\nscanning, so that modules installed by scanners inherit permits from the method's module.",
      "id": 183,
      "index": [
        4,
        270
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        277,
        279
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Called by the Binder prior to entering a module's configure method.",
      "id": 184,
      "index": [
        8,
        75
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        286,
        286
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Save the parent module's permits so that they can be restored when the Binder exits this",
      "id": 185,
      "index": [
        9,
        97
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        292,
        292
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "new (child) module's configure method.",
      "id": 186,
      "index": [
        9,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        293,
        293
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Called by the Binder when it exits a module's configure method.",
      "id": 187,
      "index": [
        8,
        71
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        305,
        305
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Restore the parent module's permits.",
      "id": 188,
      "index": [
        9,
        45
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        307,
        307
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Pick up annotations on anonymous classes (e.g. new @Bar Foo() { ... }):",
      "id": 189,
      "index": [
        7,
        78
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        324,
        324
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "force wildcard alignment",
      "id": 190,
      "index": [
        38,
        62
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        330,
        330
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_2.java",
      "type": [
        "expand"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java": [
    {
      "className": "",
      "content": "Contains abstractions for enforcing {@link RestrictedBindingSource}.",
      "id": 191,
      "index": [
        0,
        68
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        30,
        30
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Enforcement happens in two phases:",
      "id": 192,
      "index": [
        0,
        37
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        32,
        32
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "<li>Data structures for enforcement are built during Binder configuration. {@link\n      PermitMapConstruction} encapsulates this process, and the {@link PermitMap} is the end\n      result.\n  <li>Restrictions are enforced by checking each binding for violations with {@link #check},\n      which uses the {@link PermitMap}(s) built during Binder configuration.",
      "id": 193,
      "index": [
        0,
        358
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        35,
        39
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "<p>Note: None of this is thread-safe because it's only used while the Injector is being built,\nwhich happens on a single thread.",
      "id": 194,
      "index": [
        0,
        128
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        42,
        43
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "@author vzm@google.com (Vladimir Makaric)\n@since 5.0",
      "id": 195,
      "index": [
        0,
        52
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        45,
        46
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Mapping between an element source and its permit annotations.",
      "id": 196,
      "index": [
        6,
        67
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        54,
        54
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns a suggestion message to help developers understand why a certain binding key \nis restricted and cannot be created directly, and what steps might be needed to resolve it.",
      "id": 197,
      "index": [
        0,
        177
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        61,
        62
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "This method checks if the given {@code key} is associated with a {@link RestrictedBindingSource},\nwhich indicates that the key cannot be bound directly (e.g., due to internal Guice restrictions).\nIf such a restriction exists, a user-friendly hint is returned with the explanation.\nIf no restriction is found, an empty {@link Optional} is returned.",
      "id": 198,
      "index": [
        0,
        347
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        64,
        67
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "legacy:</b> In v4.0 and later, prefer using {@link #createChildInjector(Iterable)} for\\ncreating child injectors. This method is retained for compatibility, but it is recommended \\nto use the iterable version for consistency and flexibility",
      "id": 199,
      "index": [
        0,
        240
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        69,
        69
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand",
        "deprecation"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@param guiceInternal An internal Guice context object used to validate internal behavior. \n                     It must not be null. (Currently unused in this method but may be needed\n                     for future logic or validation.)\n@param key           The Guice {@link Key} for which the binding is being evaluated.\n@return              An {@link Optional} containing a formatted suggestion message if the key\n                     is restricted; otherwise, {@link Optional#empty()}.\n@throws NullPointerException if {@code guiceInternal} is null.",
      "id": 200,
      "index": [
        0,
        552
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        71,
        77
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns all the restriction violations found on the given Module Elements, as error messages.",
      "id": 201,
      "index": [
        2,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        94,
        94
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>Note: Intended to be used on Module Elements, not Injector Elements, ie. the result of\n{@link Elements#getElements} not {@code Injector.getElements}. The Module Elements this check\ncares about are:",
      "id": 202,
      "index": [
        2,
        202
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        96,
        98
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<li>Module Bindings, which are always explicit and always have an {@link ElementSource} (with\n      a Module Stack), unlike Injector Bindings, which may be implicit and bereft of an\n      ElementSource.\n  <li>{@link PrivateElements}, which represent the recursive case of this check. They contain a\n      list of elements that this check is recursively called on.",
      "id": 203,
      "index": [
        2,
        365
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        101,
        105
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Clear all the permit maps after the checks are done.",
      "id": 204,
      "index": [
        7,
        59
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        112,
        112
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Performs validation checks on a list of {@link Element} objects and aggregates any resulting error messages.",
      "id": 205,
      "index": [
        2,
        110
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        117,
        117
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "This method iterates over each {@code Element} in the provided list and delegates the actual checking\nto the overloaded {@code check(Element)} method. All messages returned from individual checks are collected\ninto a single immutable list.",
      "id": 206,
      "index": [
        2,
        241
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        119,
        121
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Typically used during the binding or module validation phase in Guice, where each element\n(e.g., bindings, provider methods, scopes) may be inspected for misconfiguration or misuse.",
      "id": 207,
      "index": [
        2,
        183
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        123,
        124
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@param elements A list of {@link Element} instances to be checked. These elements usually represent\n                components in a Guice module or injector configuration.\n@return An {@link ImmutableList} of {@link Message} objects representing validation errors or warnings\n        encountered during the check. If no errors are found, the returned list will be empty.",
      "id": 208,
      "index": [
        2,
        371
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        126,
        129
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Base case.",
      "id": 209,
      "index": [
        13,
        23
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        143,
        143
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Base case.",
      "id": 210,
      "index": [
        13,
        23
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        149,
        149
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Recursive case.",
      "id": 211,
      "index": [
        13,
        28
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        159,
        159
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Module Bindings are all explicit and have an ElementSource.",
      "id": 212,
      "index": [
        7,
        66
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        169,
        169
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Constructs a detailed error message describing why a given binding key violates restriction rules.",
      "id": 213,
      "index": [
        0,
        98
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        194,
        194
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "This method is used to report a violation when a key cannot be bound due to the presence of\n{@code @RestrictedBindingSource} annotations on either its type or annotation.\nIt generates a message that explains what kind of permit annotations are required\non the module that attempts to bind the key.",
      "id": 214,
      "index": [
        0,
        297
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        196,
        199
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@param key                 The {@link Key} that failed to be bound due to restrictions.\n@param explanation         A human-readable explanation describing why the restriction exists.\n@param acceptablePermits   A set of annotation classes that are considered valid \"permits\" —\n                           the module binding the key must be annotated with one of these to be allowed.\n@param annotationRestricted A boolean indicating whether the restriction comes from the key's annotation\n                            (true) or its type (false). This affects the wording in the message.\n@return A formatted {@link String} describing the binding violation, including the key,\n        required permits, the restricted target (annotation or type), and a developer-friendly explanation.",
      "id": 215,
      "index": [
        0,
        778
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        201,
        208
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Get all permits on the element source chain.",
      "id": 216,
      "index": [
        6,
        50
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        226,
        226
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "TODO(b/156759807): Switch to Streams.stream (instead of inlining it).",
      "id": 217,
      "index": [
        7,
        76
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        246,
        246
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@Deprecated use {@link #check(Dependency)} instead.",
      "id": 218,
      "index": [
        5,
        56
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        260,
        260
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Base case.",
      "id": 219,
      "index": [
        13,
        23
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        264,
        264
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Some Module Elements, like Message, don't always have an ElementSource.",
      "id": 220,
      "index": [
        15,
        86
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        268,
        268
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Recursive case.",
      "id": 221,
      "index": [
        13,
        28
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        275,
        275
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Clears the permit metadata associated with a given {@link ElementSource} and all of its ancestors.",
      "id": 222,
      "index": [
        2,
        100
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        284,
        284
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "This method recursively traverses the chain of {@code ElementSource} objects (via {@code getOriginalElementSource()})\nand clears the permit map stored in each {@code ModuleSource}. The permit map typically contains annotations\nthat grant permission to bind restricted keys.",
      "id": 223,
      "index": [
        2,
        275
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        287,
        289
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Usage:\n<pre>{@code\n// Suppose you have an ElementSource from a Guice element (e.g., a binding or module).\nElementSource source = ...;",
      "id": 224,
      "index": [
        2,
        135
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        292,
        295
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "// Clear all permit-related metadata up the source chain.\nclear(source);\n}</pre>",
      "id": 225,
      "index": [
        2,
        82
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        297,
        299
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "This is typically done to remove temporary or intermediate metadata that should not persist beyond\nvalidation or transformation phases in Guice's internal pipeline.",
      "id": 226,
      "index": [
        2,
        166
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        301,
        302
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@param elementSource The starting {@link ElementSource} whose associated permit map should be cleared.\n                     If {@code null}, the method exits silently.",
      "id": 227,
      "index": [
        2,
        169
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        304,
        305
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Returns the restriction on the given key (null if there is none).",
      "id": 228,
      "index": [
        2,
        67
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        315,
        315
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "If the key is annotated then only the annotation restriction matters, the type restriction is\nignored (an annotated type is essentially a new type).",
      "id": 229,
      "index": [
        2,
        150
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        317,
        318
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Builds the map from each module to all the permit annotations on its module stack.",
      "id": 230,
      "index": [
        2,
        84
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        327,
        327
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>Bindings refer to the module that created them via a {@link ModuleSource}. The map built\nhere maps a module's {@link ModuleSource} to all the {@link RestrictedBindingSource.Permit}\nannotations found on the path from the root of the module hierarchy to it. This path contains\nall the modules that transitively install the module (including the module itself). This path\nis also known as the module stack.",
      "id": 231,
      "index": [
        2,
        408
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        329,
        333
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "<p>The map is built by piggybacking on the depth-first traversal of the module hierarchy during\nBinder configuration.",
      "id": 232,
      "index": [
        2,
        119
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        335,
        336
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Maintains the permits on the current module installation path.",
      "id": 233,
      "index": [
        7,
        69
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        356,
        356
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Stack tracking the currentModulePermits during module traversal.",
      "id": 234,
      "index": [
        7,
        71
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        358,
        358
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Returns a possibly unfinished map. The map should only be used after the construction is\nfinished.",
      "id": 235,
      "index": [
        4,
        102
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        363,
        364
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Sets the permits on the current module installation path to the permits on the given module\nsource so that subsequently installed modules may inherit them. Used only for method\nscanning, so that modules installed by scanners inherit permits from the method's module.",
      "id": 236,
      "index": [
        4,
        270
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        371,
        373
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Records and updates permit annotations when entering a new module during Guice configuration.",
      "id": 237,
      "index": [
        4,
        97
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        380,
        380
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "This method is called by the Guice {@code Binder} just before invoking a module's {@code configure()} method.\nIt inspects the module for any permit annotations (e.g., annotations that are allowed to bind restricted keys),\nupdates the current set of active permits, and stores this state for use during the configuration of the module.",
      "id": 238,
      "index": [
        4,
        338
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        382,
        384
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "The previously active permit set is saved on a stack so it can be restored later via {@code popModule()} \nafter configuration exits this module.",
      "id": 239,
      "index": [
        4,
        148
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        386,
        387
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "<p><b>Usage:</b>\n<pre>{@code\n// During Guice module traversal, when entering a new module:\npushModule(MyModule.class, new ModuleSource(...));\n}</pre>",
      "id": 240,
      "index": [
        4,
        153
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        389,
        393
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "<p>This mechanism ensures that permit annotations declared on parent modules are inherited by child modules,\nand that module-specific permits are correctly scoped during the configuration process.",
      "id": 241,
      "index": [
        4,
        200
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        395,
        396
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary",
        "expand"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "@param module        The module class being entered.\n@param moduleSource  The {@link ModuleSource} representing the source location or context of the module.\n                     This is used as a key to associate the updated permit set with this module.",
      "id": 242,
      "index": [
        4,
        258
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        398,
        400
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Save the parent module's permits so that they can be restored when the Binder exits this",
      "id": 243,
      "index": [
        9,
        97
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        409,
        409
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "new (child) module's configure method.",
      "id": 244,
      "index": [
        9,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        410,
        410
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Called by the Binder when it exits a module's configure method.",
      "id": 245,
      "index": [
        8,
        71
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        422,
        422
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Restore the parent module's permits.",
      "id": 246,
      "index": [
        9,
        45
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        424,
        424
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PermitMapConstruction",
      "content": "Finishes the {@link PermitMap}. Called by the Binder when all modules are installed.",
      "id": 247,
      "index": [
        8,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        428,
        428
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "@since 2.0 you can use isExempt(ElementSource elementSource) instead",
      "id": 248,
      "index": [
        5,
        73
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        440,
        440
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "Pick up annotations on anonymous classes (e.g. new @Bar Foo() { ... }):",
      "id": 249,
      "index": [
        7,
        78
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        443,
        443
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "BindingSourceRestriction",
      "content": "force wildcard alignment",
      "id": 250,
      "index": [
        38,
        62
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        449,
        449
      ],
      "relativePath": "/core/src/com/google/inject/bindingSourceRestriction/BindingSourceRestriction_3.java",
      "type": [
        "expand"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/Element.java": [
    {
      "className": "",
      "content": "An internal binding annotation applied to each element in a multibinding. All elements are\nassigned a globally-unique id to allow different modules to contribute multibindings\nindependently.",
      "id": 324,
      "index": [
        0,
        190
      ],
      "language": "java",
      "lastCommitDate": "2008-05-13T07:16:26.000Z",
      "level": "inline",
      "lineNumber": [
        7,
        9
      ],
      "relativePath": "/core/src/com/google/inject/internal/Element.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author jessewilson@google.com (Jesse Wilson)",
      "id": 325,
      "index": [
        0,
        45
      ],
      "language": "java",
      "lastCommitDate": "2008-05-13T07:16:26.000Z",
      "level": "inline",
      "lineNumber": [
        11,
        11
      ],
      "relativePath": "/core/src/com/google/inject/internal/Element.java",
      "type": [
        "ownership"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/EncounterImpl.java": [
    {
      "className": "",
      "content": "@author jessewilson@google.com (Jesse Wilson)",
      "id": 326,
      "index": [
        4,
        49
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        19,
        19
      ],
      "relativePath": "/core/src/com/google/inject/internal/EncounterImpl.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "EncounterImpl",
      "content": "lazy",
      "id": 327,
      "index": [
        64,
        68
      ],
      "language": "java",
      "lastCommitDate": "2009-04-08T23:48:49.000Z",
      "level": "inline",
      "lineNumber": [
        24,
        24
      ],
      "relativePath": "/core/src/com/google/inject/internal/EncounterImpl.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "EncounterImpl",
      "content": "lazy",
      "id": 328,
      "index": [
        68,
        72
      ],
      "language": "java",
      "lastCommitDate": "2009-03-29T21:16:51.000Z",
      "level": "inline",
      "lineNumber": [
        25,
        25
      ],
      "relativePath": "/core/src/com/google/inject/internal/EncounterImpl.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "EncounterImpl",
      "content": "lazy",
      "id": 329,
      "index": [
        41,
        45
      ],
      "language": "java",
      "lastCommitDate": "2009-03-29T21:16:51.000Z",
      "level": "inline",
      "lineNumber": [
        26,
        26
      ],
      "relativePath": "/core/src/com/google/inject/internal/EncounterImpl.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "EncounterImpl",
      "content": "make sure the applicable aspects is mutable",
      "id": 330,
      "index": [
        7,
        50
      ],
      "language": "java",
      "lastCommitDate": "2009-04-14T00:50:25.000Z",
      "level": "inline",
      "lineNumber": [
        48,
        48
      ],
      "relativePath": "/core/src/com/google/inject/internal/EncounterImpl.java",
      "type": [
        "expand",
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/Error/ErrorFormatter.java": [],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/Error/ErrorHandler.java": [
    {
      "className": "",
      "content": "Handles errors in the Injector.",
      "id": 331,
      "index": [
        0,
        31
      ],
      "language": "java",
      "lastCommitDate": "2007-01-30T03:13:38.000Z",
      "level": "inline",
      "lineNumber": [
        4,
        4
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorHandler.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)",
      "id": 332,
      "index": [
        0,
        37
      ],
      "language": "java",
      "lastCommitDate": "2007-01-30T03:13:38.000Z",
      "level": "inline",
      "lineNumber": [
        6,
        6
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorHandler.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "",
      "content": "Handles an error.",
      "id": 333,
      "index": [
        6,
        23
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "method",
      "lineNumber": [
        11,
        11
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorHandler.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Handles a user-reported error.",
      "id": 334,
      "index": [
        6,
        36
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "method",
      "lineNumber": [
        14,
        14
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorHandler.java",
      "type": [
        "summary"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/Error/ErrorId.java": [
    {
      "className": "",
      "content": "Enum used to identify a specific Guice error.",
      "id": 335,
      "index": [
        4,
        49
      ],
      "language": "java",
      "lastCommitDate": "2020-05-09T01:32:59.000Z",
      "level": "inline",
      "lineNumber": [
        0,
        0
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Multiple type converters found for the same target type.",
      "id": 336,
      "index": [
        6,
        62
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        2,
        2
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "AOP (Aspect-Oriented Programming) support is disabled, but interceptors were bound.",
      "id": 337,
      "index": [
        6,
        89
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        5,
        5
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "An @Inject annotation is required but not present.",
      "id": 338,
      "index": [
        6,
        56
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        8,
        8
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@Target annotation on binding annotation is missing PARAMETER, used incorrectly.",
      "id": 339,
      "index": [
        6,
        86
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        11,
        11
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A binding was already set previously and is being redefined.",
      "id": 340,
      "index": [
        6,
        66
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        14,
        14
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Attempt to bind to a core Guice framework type, which is disallowed.",
      "id": 341,
      "index": [
        6,
        74
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        17,
        17
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Binding to a Provider type is not allowed directly.",
      "id": 342,
      "index": [
        6,
        57
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        20,
        20
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Cannot create a proxy for the specified class.",
      "id": 343,
      "index": [
        6,
        52
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        23,
        23
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A child injector attempted to set a binding that was already configured.",
      "id": 344,
      "index": [
        6,
        78
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        26,
        26
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Circular proxies are disabled but required for some binding.",
      "id": 345,
      "index": [
        6,
        66
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        29,
        29
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Constructor does not match the expected type definition.",
      "id": 346,
      "index": [
        6,
        62
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        32,
        32
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Type mismatch during conversion from string to target type.",
      "id": 347,
      "index": [
        6,
        65
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        35,
        35
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A type converter returned null during conversion.",
      "id": 348,
      "index": [
        6,
        55
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        38,
        38
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Multiple binding annotations found on a single member.",
      "id": 349,
      "index": [
        6,
        60
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        41,
        41
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A duplicate element was added to a multibinder or set binder.",
      "id": 350,
      "index": [
        6,
        67
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        44,
        44
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Duplicate keys were found in a MapBinder configuration.",
      "id": 351,
      "index": [
        6,
        61
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        47,
        47
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A scope was bound multiple times for the same annotation.",
      "id": 352,
      "index": [
        6,
        63
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        50,
        50
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Multiple scope annotations found on the same binding.",
      "id": 353,
      "index": [
        6,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        53,
        53
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "An error occurred while trying to enhance a class (e.g., with proxies).",
      "id": 354,
      "index": [
        6,
        77
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        56,
        56
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Error occurred during constructor injection.",
      "id": 355,
      "index": [
        6,
        50
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        59,
        59
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Error occurred during method injection.",
      "id": 356,
      "index": [
        6,
        45
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        62,
        62
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Error occurred inside a custom provider.",
      "id": 357,
      "index": [
        6,
        46
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        65,
        65
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "General error caused by user code.",
      "id": 358,
      "index": [
        6,
        40
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        68,
        68
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Error occurred in user-defined injector configuration.",
      "id": 359,
      "index": [
        6,
        60
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        71,
        71
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Error while notifying a TypeListener during injection.",
      "id": 360,
      "index": [
        6,
        60
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        74,
        74
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A type was exposed in a private module but not bound.",
      "id": 361,
      "index": [
        6,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        77,
        77
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Attempted to inject into an abstract method, which is not supported.",
      "id": 362,
      "index": [
        6,
        74
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        80,
        80
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Attempted to inject into a final field, which is not supported.",
      "id": 363,
      "index": [
        6,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        83,
        83
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Injection into inner classes is not allowed unless they are static.",
      "id": 364,
      "index": [
        6,
        73
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        86,
        86
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Injection into local (non-top-level) classes is not supported.",
      "id": 365,
      "index": [
        6,
        68
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        89,
        89
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Injected method declares type parameters, which is unsupported.",
      "id": 366,
      "index": [
        6,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        92,
        92
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Raw MembersInjector used, which lacks type safety.",
      "id": 367,
      "index": [
        6,
        56
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        95,
        95
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Raw Provider used instead of typed provider.",
      "id": 368,
      "index": [
        6,
        50
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        98,
        98
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Raw TypeLiteral used instead of a parameterized one.",
      "id": 369,
      "index": [
        6,
        58
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        101,
        101
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A just-in-time binding was already set earlier.",
      "id": 370,
      "index": [
        6,
        53
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        104,
        104
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Just-In-Time (JIT) bindings are disabled entirely.",
      "id": 371,
      "index": [
        6,
        56
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        107,
        107
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "JIT bindings are disabled in the parent injector.",
      "id": 372,
      "index": [
        6,
        55
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        110,
        110
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "The binding key was not fully specified (e.g., missing type parameter).",
      "id": 373,
      "index": [
        6,
        77
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        113,
        113
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Binding annotation is placed incorrectly (e.g., on method rather than parameter).",
      "id": 374,
      "index": [
        6,
        87
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        116,
        116
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Constant value was expected but not provided in configuration.",
      "id": 375,
      "index": [
        6,
        68
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        119,
        119
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "No suitable constructor was found for injection.",
      "id": 376,
      "index": [
        6,
        54
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        122,
        122
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "No implementation was bound for a requested interface or abstract class.",
      "id": 377,
      "index": [
        6,
        78
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        125,
        125
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Custom annotation is missing @Retention(RUNTIME).",
      "id": 378,
      "index": [
        6,
        55
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        128,
        128
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Scope annotation is missing on a scoped binding.",
      "id": 379,
      "index": [
        6,
        54
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        131,
        131
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Implementation type is not a subtype of the interface or superclass it's bound to.",
      "id": 380,
      "index": [
        6,
        88
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        134,
        134
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A null element was added to a multibinder set.",
      "id": 381,
      "index": [
        6,
        52
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        137,
        137
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Null was injected into a non-nullable field or parameter.",
      "id": 382,
      "index": [
        6,
        63
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        140,
        140
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "A null value was added to a map binding.",
      "id": 383,
      "index": [
        6,
        46
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        143,
        143
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Constructor marked @Inject(optional=true), which is unsupported.",
      "id": 384,
      "index": [
        6,
        70
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        146,
        146
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "A binding was defined in terms of itself, leading to recursion.",
      "id": 385,
      "index": [
        6,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        149,
        149
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@ImplementedBy refers to the same class it annotates.",
      "id": 386,
      "index": [
        6,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        152,
        152
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "",
      "content": "@ProvidedBy refers to the same class it annotates.",
      "id": 387,
      "index": [
        6,
        56
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        155,
        155
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Requested injection types do not match in a single call.",
      "id": 388,
      "index": [
        6,
        62
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        158,
        158
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Scope annotation used on abstract type, which is not allowed.",
      "id": 389,
      "index": [
        6,
        67
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        161,
        161
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "No implementation found for a given scope annotation.",
      "id": 390,
      "index": [
        6,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        164,
        164
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Static injection requested on an interface, which is unsupported.",
      "id": 391,
      "index": [
        6,
        71
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        167,
        167
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@ImplementedBy or @ProvidedBy failed to provide a subtype.",
      "id": 392,
      "index": [
        6,
        64
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        170,
        170
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "",
      "content": "More than one constructor marked with @Inject, which is ambiguous.",
      "id": 393,
      "index": [
        6,
        72
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        173,
        173
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "",
      "content": "Provider method returns void, which is invalid.",
      "id": 394,
      "index": [
        6,
        53
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        176,
        176
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "All other internal or user errors not explicitly covered above.",
      "id": 395,
      "index": [
        6,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        179,
        179
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "Note: This enum is used to categorize and identify specific errors that can occur in Guice.",
      "id": 396,
      "index": [
        3,
        94
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        182,
        182
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/ErrorId.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/Error/Errors.java": [
    {
      "className": "",
      "content": "A collection of error messages. If this type is passed as a method parameter, the method is\nconsidered to have executed successfully only if new errors were not added to this collection.",
      "id": 397,
      "index": [
        0,
        186
      ],
      "language": "java",
      "lastCommitDate": "2008-06-15T11:21:18.000Z",
      "level": "class",
      "lineNumber": [
        36,
        37
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "<p>Errors can be chained to provide additional context. To add context, call {@link #withSource}\nto create a new Errors instance that contains additional context. All messages added to the\nreturned instance will contain full context.",
      "id": 398,
      "index": [
        0,
        233
      ],
      "language": "java",
      "lastCommitDate": "2008-06-15T11:21:18.000Z",
      "level": "class",
      "lineNumber": [
        39,
        41
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "<p>To avoid messages with redundant context, {@link #withSource} should be added sparingly. A\ngood rule of thumb is to assume a method's caller has already specified enough context to\nidentify that method. When calling a method that's defined in a different context, call that\nmethod with an errors object that includes its context.",
      "id": 399,
      "index": [
        0,
        332
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T05:14:55.000Z",
      "level": "class",
      "lineNumber": [
        43,
        46
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "",
      "content": "@author jessewilson@google.com (Jesse Wilson)",
      "id": 400,
      "index": [
        0,
        45
      ],
      "language": "java",
      "lastCommitDate": "2008-11-02T05:14:55.000Z",
      "level": "class",
      "lineNumber": [
        48,
        48
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "Errors",
      "content": "Throws a ConfigurationException with an NullPointerExceptions as the cause if the given\nreference is {@code null}.",
      "id": 401,
      "index": [
        2,
        116
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        54,
        55
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Throws a ConfigurationException with a formatted {@link Message} if this condition is {@code\nfalse}.",
      "id": 402,
      "index": [
        2,
        102
      ],
      "language": "java",
      "lastCommitDate": "2016-08-12T19:23:29.000Z",
      "level": "class",
      "lineNumber": [
        67,
        68
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "The root errors object. Used to access the list of error messages.",
      "id": 403,
      "index": [
        6,
        72
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        79,
        79
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "The parent errors object. Used to obtain the chain of source objects.",
      "id": 404,
      "index": [
        6,
        75
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        82,
        82
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "The leaf source for errors added here.",
      "id": 405,
      "index": [
        6,
        44
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        85,
        85
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "null unless (root == this) and error messages exist. Never an empty list.",
      "id": 406,
      "index": [
        6,
        79
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        88,
        88
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "lazy, use getErrorsForAdd()",
      "id": 407,
      "index": [
        35,
        62
      ],
      "language": "java",
      "lastCommitDate": "2009-05-06T01:02:14.000Z",
      "level": "inline",
      "lineNumber": [
        89,
        89
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "Returns an instance that uses {@code source} as a reference point for newly added errors.",
      "id": 408,
      "index": [
        6,
        95
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        109,
        109
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "AOP (Aspect-Oriented Programming) support is disabled, but interceptors were bound.",
      "id": 409,
      "index": [
        10,
        93
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        118,
        118
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "We use a fairly generic error message here. The motivation is to share the same message for\nboth bind time errors:",
      "id": 410,
      "index": [
        2,
        116
      ],
      "language": "java",
      "lastCommitDate": "2008-06-15T11:21:18.000Z",
      "level": "class",
      "lineNumber": [
        125,
        126
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "<pre><code>Guice.createInjector(new AbstractModule() {\n  public void configure() {\n    bind(Runnable.class);\n  }\n}</code></pre>",
      "id": 411,
      "index": [
        2,
        129
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        128,
        132
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "...and at provide-time errors:",
      "id": 412,
      "index": [
        2,
        32
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        134,
        134
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "<pre><code>Guice.createInjector().getInstance(Runnable.class);</code></pre>",
      "id": 413,
      "index": [
        2,
        77
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        136,
        136
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Errors",
      "content": "Otherwise we need to know who's calling when resolving a just-in-time binding, which makes\nthings unnecessarily complex.",
      "id": 414,
      "index": [
        2,
        122
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        138,
        139
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "Errors",
      "content": "No implementation for %s was bound. If you want to bind it, use\n{@code bind(%s.class).to(...)} or {@code bind(%s.class).toProvider(...)}.",
      "id": 415,
      "index": [
        4,
        141
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        143,
        144
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Within guice's core, allow for better missing binding messages",
      "id": 416,
      "index": [
        6,
        68
      ],
      "language": "java",
      "lastCommitDate": "2016-06-21T19:10:30.000Z",
      "level": "class",
      "lineNumber": [
        150,
        150
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "No implementation for %s was bound.",
      "id": 417,
      "index": [
        14,
        49
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        155,
        155
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Just-in-time (JIT) binding is disabled, but an explicit binding is required.",
      "id": 418,
      "index": [
        12,
        88
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        161,
        161
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Just-in-time (JIT) binding is disabled in the parent injector.",
      "id": 419,
      "index": [
        12,
        74
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        169,
        169
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A type requires an @Inject annotation on its constructor.",
      "id": 420,
      "index": [
        16,
        73
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        179,
        179
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "atInjectRequired=",
      "id": 421,
      "index": [
        49,
        66
      ],
      "language": "java",
      "lastCommitDate": "2020-10-20T18:54:33.000Z",
      "level": "method",
      "lineNumber": [
        182,
        182
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A type converter returned null during conversion.",
      "id": 422,
      "index": [
        12,
        61
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        191,
        191
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Type mismatch during conversion from string to target type.",
      "id": 423,
      "index": [
        12,
        71
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        207,
        207
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Multiple type converters found for the same target type.",
      "id": 424,
      "index": [
        12,
        68
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        242,
        242
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempt to bind to a Provider type, which is not allowed directly.",
      "id": 425,
      "index": [
        8,
        74
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        256,
        256
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempt to bind a type that does not extend the expected type.",
      "id": 426,
      "index": [
        8,
        70
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        261,
        261
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "@ImplementedBy points to the same class it annotates.",
      "id": 427,
      "index": [
        12,
        65
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        267,
        267
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "@ProvidedBy points to the same class it annotates.",
      "id": 428,
      "index": [
        12,
        62
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        274,
        274
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "The annotation is missing @Retention(RUNTIME), which is required for Guice to use it.",
      "id": 429,
      "index": [
        12,
        97
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        280,
        280
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "The annotation is missing @ScopeAnnotation, which is required for Guice to use it.",
      "id": 430,
      "index": [
        12,
        94
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        287,
        287
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempt to use an optional constructor, which is not allowed.",
      "id": 431,
      "index": [
        12,
        73
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        294,
        294
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempt to bind to a core Guice framework type, which is disallowed.",
      "id": 432,
      "index": [
        12,
        80
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        302,
        302
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "No scope was found for the given annotation.",
      "id": 433,
      "index": [
        16,
        60
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        311,
        311
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Scope annotation used on abstract type, which is not allowed.",
      "id": 434,
      "index": [
        12,
        73
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        320,
        320
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Binding annotation is placed incorrectly (e.g., on method rather than parameter).",
      "id": 435,
      "index": [
        12,
        93
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        331,
        331
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "TODO(diamondm) don't mention zero-arg constructors if requireAtInjectOnConstructors is true",
      "id": 436,
      "index": [
        5,
        96
      ],
      "language": "java",
      "lastCommitDate": "2019-08-14T00:18:46.000Z",
      "level": "inline",
      "lineNumber": [
        339,
        339
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "A type requires a constructor annotated with @Inject.",
      "id": 437,
      "index": [
        16,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        347,
        347
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "atInjectRequired=",
      "id": 438,
      "index": [
        49,
        66
      ],
      "language": "java",
      "lastCommitDate": "2020-10-20T18:54:33.000Z",
      "level": "method",
      "lineNumber": [
        350,
        350
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "More than one constructor annotated with @Inject, which is ambiguous.",
      "id": 439,
      "index": [
        12,
        81
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        355,
        355
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "Constructor does not match the expected type definition.",
      "id": 440,
      "index": [
        12,
        68
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        364,
        364
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Duplicate keys were found in a MapBinder configuration.",
      "id": 441,
      "index": [
        16,
        71
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        372,
        372
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A scope was bound multiple times for the same annotation.",
      "id": 442,
      "index": [
        12,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        380,
        380
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Provider methods must return a value, not void.",
      "id": 443,
      "index": [
        12,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        391,
        391
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempted to bind a constant without providing its value.",
      "id": 444,
      "index": [
        12,
        69
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        397,
        397
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Injection into inner classes is not allowed unless they are static.",
      "id": 445,
      "index": [
        12,
        79
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        403,
        403
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Injection into local (non-top-level) classes is not supported.",
      "id": 446,
      "index": [
        12,
        74
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        412,
        412
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Multiple binding annotations found on a single member.",
      "id": 447,
      "index": [
        12,
        66
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        422,
        422
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempted to inject into an interface, which is not allowed.",
      "id": 448,
      "index": [
        12,
        72
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        432,
        432
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempted to inject into a final field, which is not supported.",
      "id": 449,
      "index": [
        8,
        71
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        439,
        439
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "@Target annotation on binding annotation is missing PARAMETER, used incorrectly.",
      "id": 450,
      "index": [
        10,
        90
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        446,
        446
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Attempted to inject into an abstract method, which is not supported.",
      "id": 451,
      "index": [
        12,
        80
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        457,
        457
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Injected method declares type parameters, which is unsupported.",
      "id": 452,
      "index": [
        12,
        75
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        463,
        463
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Multiple scope annotations found on the same binding.",
      "id": 453,
      "index": [
        12,
        65
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        472,
        472
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Binding points to itself, which is not allowed.",
      "id": 454,
      "index": [
        12,
        59
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        481,
        481
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": []
    },
    {
      "className": "Errors",
      "content": "A binding was already set previously and is being redefined.",
      "id": 455,
      "index": [
        12,
        72
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        488,
        488
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A binding was already set previously and is being redefined.",
      "id": 456,
      "index": [
        12,
        72
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        494,
        494
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A binding was already set previously and is being redefined.",
      "id": 457,
      "index": [
        12,
        72
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        503,
        503
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A binding was already set previously and is being redefined.",
      "id": 458,
      "index": [
        16,
        76
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        512,
        512
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "A child injector attempted to set a binding that was already configured.",
      "id": 459,
      "index": [
        16,
        88
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        514,
        514
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "An error occurred while checking for duplicate bindings.",
      "id": 460,
      "index": [
        12,
        68
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        522,
        522
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Cannot request injection on one instance with two different types.",
      "id": 461,
      "index": [
        12,
        78
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        534,
        534
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Could not expose() %s, it must be explicitly bound.",
      "id": 462,
      "index": [
        12,
        63
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        558,
        558
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "The binding key was not fully specified (e.g., missing type parameter).",
      "id": 463,
      "index": [
        12,
        83
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        564,
        564
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "General error caused by user code.",
      "id": 464,
      "index": [
        10,
        44
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        592,
        592
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Raw Provider used instead of typed provider.",
      "id": 465,
      "index": [
        12,
        56
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        599,
        599
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Raw MembersInjector used, which lacks type safety.",
      "id": 466,
      "index": [
        12,
        62
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        605,
        605
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Raw TypeLiteral used instead of a parameterized one.",
      "id": 467,
      "index": [
        12,
        64
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "method",
      "lineNumber": [
        616,
        616
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Errors",
      "content": "Guice no longer calls this, but external callers do",
      "id": 468,
      "index": [
        5,
        56
      ],
      "language": "java",
      "lastCommitDate": "2017-12-08T20:55:24.000Z",
      "level": "inline",
      "lineNumber": [
        638,
        638
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Errors",
      "content": "If the messageFormat is null, we still want to add a message, so we use ErrorId.OTHER.",
      "id": 469,
      "index": [
        7,
        93
      ],
      "language": "java",
      "lastCommitDate": "2025-05-28T15:42:27.000Z",
      "level": "inline",
      "lineNumber": [
        696,
        696
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "Errors",
      "content": "TODO(lukes): inline into callers",
      "id": 470,
      "index": [
        5,
        37
      ],
      "language": "java",
      "lastCommitDate": "2017-12-03T01:39:31.000Z",
      "level": "inline",
      "lineNumber": [
        718,
        718
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "TODO(lukes): inline in callers.  There are some callers outside of guice, so this is difficult",
      "id": 471,
      "index": [
        5,
        99
      ],
      "language": "java",
      "lastCommitDate": "2017-12-03T01:39:31.000Z",
      "level": "inline",
      "lineNumber": [
        740,
        740
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "TODO(lukes): inline in callers.  There are some callers outside of guice, so this is difficult",
      "id": 472,
      "index": [
        5,
        99
      ],
      "language": "java",
      "lastCommitDate": "2017-12-03T01:39:31.000Z",
      "level": "inline",
      "lineNumber": [
        745,
        745
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Errors",
      "content": "TODO(lukes): inline in callers.  There are some callers outside of guice, so this is difficult",
      "id": 473,
      "index": [
        5,
        99
      ],
      "language": "java",
      "lastCommitDate": "2017-12-03T01:39:31.000Z",
      "level": "inline",
      "lineNumber": [
        750,
        750
      ],
      "relativePath": "/core/src/com/google/inject/internal/Error/Errors.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/PrivateElementProcessor.java": [
    {
      "className": "",
      "content": "Handles {@code Binder.newPrivateBinder()} elements.",
      "id": 474,
      "index": [
        0,
        51
      ],
      "language": "java",
      "lastCommitDate": "2008-11-26T02:37:35.000Z",
      "level": "class",
      "lineNumber": [
        6,
        6
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementProcessor.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author jessewilson@google.com (Jesse Wilson)",
      "id": 475,
      "index": [
        0,
        45
      ],
      "language": "java",
      "lastCommitDate": "2008-11-26T02:37:35.000Z",
      "level": "class",
      "lineNumber": [
        8,
        8
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementProcessor.java",
      "type": [
        "ownership"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/internal/PrivateElementsImpl.java": [
    {
      "className": "",
      "content": "@author jessewilson@google.com (Jesse Wilson)",
      "id": 476,
      "index": [
        4,
        49
      ],
      "language": "java",
      "lastCommitDate": "2016-09-12T17:46:15.000Z",
      "level": "class",
      "lineNumber": [
        22,
        22
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementsImpl.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "PrivateElementsImpl",
      "content": "This class acts as both a value object and as a builder. When getElements() is called, an\nimmutable collection of elements is constructed and the original mutable list is nulled out.\nSimilarly, the exposed keys are made immutable on access.",
      "id": 477,
      "index": [
        2,
        242
      ],
      "language": "java",
      "lastCommitDate": "2008-11-26T02:37:35.000Z",
      "level": "class",
      "lineNumber": [
        25,
        27
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementsImpl.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "PrivateElementsImpl",
      "content": "lazily instantiated",
      "id": 478,
      "index": [
        6,
        25
      ],
      "language": "java",
      "lastCommitDate": "2008-11-25T08:43:49.000Z",
      "level": "class",
      "lineNumber": [
        36,
        36
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementsImpl.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "PrivateElementsImpl",
      "content": "lazily instantiated",
      "id": 479,
      "index": [
        6,
        25
      ],
      "language": "java",
      "lastCommitDate": "2008-11-25T08:43:49.000Z",
      "level": "class",
      "lineNumber": [
        39,
        39
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementsImpl.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "PrivateElementsImpl",
      "content": "ensure exposedKeysToSources is populated",
      "id": 480,
      "index": [
        25,
        65
      ],
      "language": "java",
      "lastCommitDate": "2009-05-15T07:10:43.000Z",
      "level": "inline",
      "lineNumber": [
        108,
        108
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementsImpl.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "PrivateElementsImpl",
      "content": "ensure exposedKeysToSources is populated",
      "id": 481,
      "index": [
        25,
        65
      ],
      "language": "java",
      "lastCommitDate": "2009-05-15T07:10:43.000Z",
      "level": "inline",
      "lineNumber": [
        116,
        116
      ],
      "relativePath": "/core/src/com/google/inject/internal/PrivateElementsImpl.java",
      "type": [
        "summary",
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/message/Messages-1.java": [
    {
      "className": "",
      "content": "Utility methods for {@link Message} objects",
      "id": 482,
      "index": [
        4,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        22,
        22
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)",
      "id": 483,
      "index": [
        3,
        40
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        24,
        24
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "Messages",
      "content": "Prepends the list of sources to the given {@link Message}",
      "id": 484,
      "index": [
        6,
        63
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        29,
        29
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "It is possible that the end of getSources() and the beginning of message.getSources() are",
      "id": 485,
      "index": [
        7,
        96
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        32,
        32
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "equivalent, in this case we should drop the repeated source when joining the lists.  The",
      "id": 486,
      "index": [
        7,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        33,
        33
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "most likely scenario where this would happen is when a scoped binding throws an exception,",
      "id": 487,
      "index": [
        7,
        97
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        34,
        34
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "due to the fact that InternalFactoryToProviderAdapter applies the binding source when",
      "id": 488,
      "index": [
        7,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        35,
        35
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "merging errors.",
      "id": 489,
      "index": [
        7,
        22
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        36,
        36
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Avoid duplicate source if the end of `sources` and the beginning of `messageSources` overlap.",
      "id": 490,
      "index": [
        11,
        104
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        40,
        40
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "This can happen due to how errors are merged by InternalFactoryToProviderAdapter.",
      "id": 491,
      "index": [
        11,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        41,
        41
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Calls {@link String#format} after converting the arguments using some standard guice formatting\nfor {@link Key}, {@link Class} and {@link Member} objects.",
      "id": 492,
      "index": [
        2,
        156
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        48,
        49
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the messageFormat is \"Hello %s\" and the argument is a Key, it will\nreturn \"Hello com.google.inject.Key<...>\".",
      "id": 493,
      "index": [
        2,
        127
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        51,
        52
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": []
    },
    {
      "className": "Messages",
      "content": "Returns the formatted message for an exception with the specified messages.",
      "id": 494,
      "index": [
        6,
        81
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        63,
        63
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the heading is \"Errors\" and the errorMessages contains\ntwo messages with error ids \"A\" and \"B\", it will return a string like:",
      "id": 495,
      "index": [
        5,
        75
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        65,
        66
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Errors:\n1. Error A\n2. Error B\nCaused by: java.lang.NullPointerException",
      "id": 496,
      "index": [
        5,
        46
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        68,
        71
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "If there are multiple messages with the same error id, they will be merged together\nand displayed as a single message with the index of the first message.\n* If there is a single cause for all the messages, it will be displayed at the end.\n* If there are multiple causes, they will not be displayed.\n* @param heading The heading for the error messages, e.g. \"Errors\" or \"Warnings\"",
      "id": 497,
      "index": [
        5,
        85
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        74,
        78
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Sort the error messages by their error id, so that the same errors are grouped together.",
      "id": 498,
      "index": [
        7,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        86,
        86
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Split the remaining errors into 2 groups, one that contains mergeable errors with",
      "id": 499,
      "index": [
        9,
        90
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        93,
        93
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "currentError and the other that need to be formatted separately in the next iteration.",
      "id": 500,
      "index": [
        9,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        94,
        94
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Creates a new Message without a cause.",
      "id": 501,
      "index": [
        2,
        40
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        129,
        129
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the errorId is \"A\" and the messageFormat is \"Hello %s\",\nit will return a Message with the error id \"A\" and the message \"Hello %s\".\n* This method is a convenience method for creating messages without a cause.",
      "id": 502,
      "index": [
        2,
        225
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        131,
        133
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "@param errorId The enum id for the error\n@param messageFormat Format string\n@param arguments format string arguments",
      "id": 503,
      "index": [
        2,
        118
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        135,
        137
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "Creates a new Message with the given cause.",
      "id": 504,
      "index": [
        2,
        45
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        144,
        144
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the errorId is \"A\" and the messageFormat is \"Hello %s\",\nit will return a Message with the error id \"A\", the message \"Hello %s\" and the cause.\n* This method is a convenience method for creating messages with a cause.",
      "id": 505,
      "index": [
        2,
        233
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        146,
        148
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "@param errorId The enum id for the error\n@param cause The exception that caused the error\n@param messageFormat Format string\n@param arguments format string arguments",
      "id": 506,
      "index": [
        2,
        167
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        150,
        153
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "Creates a new Message with the given cause and a binding source stack.",
      "id": 507,
      "index": [
        2,
        72
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        161,
        161
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "@param errorId The enum id for the error\n@param cause The exception that caused the error\n@param sources The binding sources for the source stack\n@param messageFormat Format string\n@param arguments format string arguments",
      "id": 508,
      "index": [
        2,
        223
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        163,
        167
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "Formats an object in a user friendly way.",
      "id": 509,
      "index": [
        6,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        180,
        180
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Appends information about which modules installed this source (for debugging).",
      "id": 510,
      "index": [
        6,
        84
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        190,
        190
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Converter",
      "content": "Converts the object to a string representation, appending information about which modules\ninstalled this source if available.",
      "id": 511,
      "index": [
        4,
        129
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        225,
        226
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Converter",
      "content": "deprecated use {@link #convert(Object)} instead.",
      "id": 512,
      "index": [
        4,
        52
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        228,
        228
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Messages",
      "content": "rawtypes aren't avoidable",
      "id": 513,
      "index": [
        50,
        75
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        243,
        243
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Returns the cause throwable if there is exactly one cause in {@code messages}. If there are\nzero or multiple messages with causes, null is returned.",
      "id": 514,
      "index": [
        2,
        150
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        271,
        272
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the messages contain two messages with the same cause,\nit will return the cause. If there are two messages with different causes, it will return null.\nIf there are no messages with a cause, it will return null.",
      "id": 515,
      "index": [
        2,
        228
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        274,
        276
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "Defines when two exceptions are considered the \"same\" for deduplication of stack traces.",
      "id": 516,
      "index": [
        6,
        94
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        298,
        298
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "This equivalence checks the class, message, stack trace and cause of the exception.\nIt is used to deduplicate exceptions in error messages.\n@see #getOnlyCause(Collection)\n@see com.google.inject.spi.ErrorDetail#isMergeable(ErrorDetail)\n@see com.google.inject.spi.ErrorDetail#format(int, List, Formatter)\n@see com.google.inject.spi.ErrorDetail#format(Formatter)\n@see com.google.inject.spi.ErrorDetail#getCause()",
      "id": 517,
      "index": [
        5,
        54
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        300,
        306
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "Returns true if the two exceptions are equivalent, i.e. they have the same class, message,\nstack trace and cause.",
      "id": 518,
      "index": [
        4,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "method",
      "lineNumber": [
        312,
        313
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "This is used to deduplicate exceptions in error messages.",
      "id": 519,
      "index": [
        4,
        61
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "method",
      "lineNumber": [
        315,
        315
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "Returns true if the two exceptions are equivalent, i.e. they have the same class, message,\nstack trace and cause.",
      "id": 520,
      "index": [
        4,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        326,
        327
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "This is used to deduplicate exceptions in error messages.",
      "id": 521,
      "index": [
        4,
        61
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        329,
        329
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "ANSI escape codes for formatting text in the console.",
      "id": 522,
      "index": [
        6,
        59
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        339,
        339
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "* <p>These codes are used to colorize error messages in the console, if enabled.\n* <p>They are only used if the {@link InternalFlags#enableColorizeErrorMessages()} flag is set to true.\n* <p>These codes are used to format text in the console, e.g. to make it bold, red, faint, italic or underlined.",
      "id": 523,
      "index": [
        5,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        341,
        343
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "* <p>Note: These codes are not supported on all consoles, and may not work on some platforms.",
      "id": 524,
      "index": [
        5,
        98
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        345,
        345
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "These codes are used in the `FormatOptions` enum to provide reusable formatting options\nfor error messages.",
      "id": 525,
      "index": [
        9,
        24
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        373,
        374
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "For example, the `redBold` method combines the red and bold formatting\noptions to create a red, bold text style.",
      "id": 526,
      "index": [
        5,
        46
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        376,
        377
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-1.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/message/Messages-2.java": [
    {
      "className": "",
      "content": "Utility methods for {@link Message} objects",
      "id": 527,
      "index": [
        4,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        22,
        22
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)",
      "id": 528,
      "index": [
        3,
        40
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        24,
        24
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "Messages",
      "content": "Prepends the list of sources to the given {@link Message}",
      "id": 529,
      "index": [
        6,
        63
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        29,
        29
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "It is possible that the end of getSources() and the beginning of message.getSources() are",
      "id": 530,
      "index": [
        7,
        96
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        32,
        32
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "equivalent, in this case we should drop the repeated source when joining the lists.  The",
      "id": 531,
      "index": [
        7,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        33,
        33
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "most likely scenario where this would happen is when a scoped binding throws an exception,",
      "id": 532,
      "index": [
        7,
        97
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        34,
        34
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "due to the fact that InternalFactoryToProviderAdapter applies the binding source when",
      "id": 533,
      "index": [
        7,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        35,
        35
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "merging errors.",
      "id": 534,
      "index": [
        7,
        22
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        36,
        36
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Avoid duplicate source if the end of `sources` and the beginning of `messageSources` overlap.",
      "id": 535,
      "index": [
        11,
        104
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        40,
        40
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "This can happen due to how errors are merged by InternalFactoryToProviderAdapter.",
      "id": 536,
      "index": [
        11,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        41,
        41
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Calls {@link String#format} after converting the arguments using some standard guice formatting\nfor {@link Key}, {@link Class} and {@link Member} objects.",
      "id": 537,
      "index": [
        2,
        156
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        48,
        49
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the messageFormat is \"Hello %s\" and the argument is a Key, it will\nreturn \"Hello com.google.inject.Key<...>\".",
      "id": 538,
      "index": [
        2,
        127
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        51,
        52
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": []
    },
    {
      "className": "Messages",
      "content": "for example, if the heading is \"Errors\" and the errorMessages contains\ntwo messages with error ids \"A\" and \"B\", it will return a string like:",
      "id": 539,
      "index": [
        2,
        143
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        63,
        64
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Errors:\n1. Error A\n2. Error B\nCaused by: java.lang.NullPointerException",
      "id": 540,
      "index": [
        2,
        73
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        66,
        69
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "If there are multiple messages with the same error id, they will be merged together\nand displayed as a single message with the index of the first message.\n* If there is a single cause for all the messages, it will be displayed at the end.\n* If there are multiple causes, they will not be displayed.",
      "id": 541,
      "index": [
        2,
        300
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        72,
        75
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "Sort the error messages by their error id, so that the same errors are grouped together.",
      "id": 542,
      "index": [
        7,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        84,
        84
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Split the remaining errors into 2 groups, one that contains mergeable errors with",
      "id": 543,
      "index": [
        9,
        90
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        91,
        91
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "currentError and the other that need to be formatted separately in the next iteration.",
      "id": 544,
      "index": [
        9,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        92,
        92
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "@see {@link #create(ErrorId, String, Object...)}",
      "id": 545,
      "index": [
        2,
        50
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        127,
        127
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the errorId is \"A\" and the messageFormat is \"Hello %s\",\nit will return a Message with the error id \"A\" and the message \"Hello %s\".\n* This method is a convenience method for creating messages without a cause.",
      "id": 546,
      "index": [
        2,
        225
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        129,
        131
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "@param errorId The enum id for the error\n@param messageFormat Format string\n@param arguments format string arguments",
      "id": 547,
      "index": [
        2,
        118
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        133,
        135
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the errorId is \"A\" and the messageFormat is \"Hello %s\",\nit will return a Message with the error id \"A\", the message \"Hello %s\" and the cause.\n* This method is a convenience method for creating messages with a cause.",
      "id": 548,
      "index": [
        2,
        233
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        142,
        144
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "@param errorId The enum id for the error\n@param cause The exception that caused the error\n@param messageFormat Format string\n@param arguments format string arguments",
      "id": 549,
      "index": [
        2,
        167
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        146,
        149
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "@see {@link #create(ErrorId, Throwable, String, Object...)}",
      "id": 550,
      "index": [
        2,
        61
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        157,
        157
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the errorId is \"A\" and the messageFormat is \"Hello %s\",\nit will return a Message with the error id \"A\", the message \"Hello %s\" and the cause.\n* This method is a convenience method for creating messages with a cause and binding sources.\n* The sources are prepended to the message's sources, so that the sources are displayed\n in the order they were added.",
      "id": 551,
      "index": [
        2,
        372
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        159,
        163
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "@see {@link Message#withSource(List)}",
      "id": 552,
      "index": [
        2,
        39
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        165,
        165
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Messages",
      "content": "@param errorId The enum id for the error\n@param cause The exception that caused the error\n@param sources The binding sources for the source stack\n@param messageFormat Format string\n@param arguments format string arguments",
      "id": 553,
      "index": [
        2,
        223
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        167,
        171
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Messages",
      "content": "Formats an object in a user friendly way.",
      "id": 554,
      "index": [
        6,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        184,
        184
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Appends information about which modules installed this source (for debugging).",
      "id": 555,
      "index": [
        6,
        84
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        194,
        194
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Converter",
      "content": "@deprecated use {@link #convert(Object)} instead.",
      "id": 556,
      "index": [
        8,
        57
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        229,
        229
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Messages",
      "content": "rawtypes aren't avoidable",
      "id": 557,
      "index": [
        50,
        75
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        241,
        241
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand",
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "for example, if the messages contain two messages with the same cause,\nit will return the cause. If there are two messages with different causes, it will return null.\nIf there are no messages with a cause, it will return null.",
      "id": 558,
      "index": [
        2,
        228
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        269,
        271
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "@see {@link ThrowableEquivalence} for the definition of equivalence.",
      "id": 559,
      "index": [
        2,
        70
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        273,
        273
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Messages",
      "content": "@see #getOnlyCause(Collection)\n@see com.google.inject.spi.ErrorDetail#isMergeable(ErrorDetail)\n@see com.google.inject.spi.ErrorDetail#format(int, List, Formatter)\n@see com.google.inject.spi.ErrorDetail#format(Formatter)\n@see com.google.inject.spi.ErrorDetail#getCause()",
      "id": 560,
      "index": [
        2,
        271
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        296,
        300
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "Returns true if the two exceptions are equivalent, i.e. they have the same class, message,\nstack trace and cause.",
      "id": 561,
      "index": [
        4,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "method",
      "lineNumber": [
        307,
        308
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "Returns true if the two exceptions are equivalent, i.e. they have the same class, message,\nstack trace and cause.",
      "id": 562,
      "index": [
        4,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        319,
        320
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "ANSI escape code is commonly used to apply styles such as colors, boldness, underlining, and more.",
      "id": 563,
      "index": [
        5,
        103
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        330,
        330
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "- `\\u001B[31m`: Sets the text color to red.\n- `\\u001B[1m`: Makes the text bold.\n- `\\u001B[2m`: Makes the text faint.\n- `\\u001B[3m`: Makes the text italic.\n- `\\u001B[4m`: Underlines the text.\n- `\\u001B[0m`: Resets all text formatting to default.",
      "id": 564,
      "index": [
        5,
        58
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        332,
        337
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "For example, the `redBold` method combines the red and bold formatting\noptions to create a red, bold text style.",
      "id": 565,
      "index": [
        5,
        46
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        366,
        367
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-2.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/message/Messages-3.java": [
    {
      "className": "",
      "content": "Utility methods for {@link Message} objects",
      "id": 566,
      "index": [
        4,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        22,
        22
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author crazybob@google.com (Bob Lee)",
      "id": 567,
      "index": [
        3,
        40
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        24,
        24
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "Messages",
      "content": "Prepends the list of sources to the given {@link Message}",
      "id": 568,
      "index": [
        6,
        63
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        29,
        29
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Avoid duplicate source if the end of `sources` and the beginning of `messageSources` overlap.",
      "id": 569,
      "index": [
        11,
        104
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        35,
        35
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "expand",
        "rational"
      ]
    },
    {
      "className": "Messages",
      "content": "This can happen due to how errors are merged by InternalFactoryToProviderAdapter.",
      "id": 570,
      "index": [
        11,
        92
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        36,
        36
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Messages",
      "content": "Calls {@link String#format} after converting the arguments using some standard guice formatting\nfor {@link Key}, {@link Class} and {@link Member} objects.",
      "id": 571,
      "index": [
        2,
        156
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        43,
        44
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Returns the formatted message for an exception with the specified messages.",
      "id": 572,
      "index": [
        6,
        81
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        55,
        55
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary",
        "usage"
      ]
    },
    {
      "className": "Messages",
      "content": "If there are multiple messages with the same error id, they will be merged together\nand displayed as a single message with the index of the first message.\n* If there is a single cause for all the messages, it will be displayed at the end.\n* If there are multiple causes, they will not be displayed.\n* @param heading The heading for the error messages, e.g. \"Errors\" or \"Warnings\"",
      "id": 573,
      "index": [
        5,
        85
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        57,
        61
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": []
    },
    {
      "className": "Messages",
      "content": "Sort the error messages by their error id, so that the same errors are grouped together.",
      "id": 574,
      "index": [
        7,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        69,
        69
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Split the remaining errors into 2 groups, one that contains mergeable errors with",
      "id": 575,
      "index": [
        9,
        90
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        76,
        76
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "currentError and the other that need to be formatted separately in the next iteration.",
      "id": 576,
      "index": [
        9,
        95
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "inline",
      "lineNumber": [
        77,
        77
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Creates a new Message without a cause.",
      "id": 577,
      "index": [
        2,
        40
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        112,
        112
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Creates a new Message with the given cause.",
      "id": 578,
      "index": [
        2,
        45
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        119,
        119
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Creates a new Message with the given cause and a binding source stack.",
      "id": 579,
      "index": [
        2,
        72
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        127,
        127
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Formats an object in a user friendly way.",
      "id": 580,
      "index": [
        6,
        47
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        140,
        140
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Appends information about which modules installed this source (for debugging).",
      "id": 581,
      "index": [
        6,
        84
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        150,
        150
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Converter",
      "content": "Converts the object to a string representation, appending information about which modules\ninstalled this source if available.",
      "id": 582,
      "index": [
        7,
        42
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        185,
        186
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "Returns the cause throwable if there is exactly one cause in {@code messages}. If there are\nzero or multiple messages with causes, null is returned.",
      "id": 583,
      "index": [
        5,
        61
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        227,
        228
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "@see com.google.inject.spi.ErrorDetail#format(Formatter)\n@see com.google.inject.spi.ErrorDetail#getCause()",
      "id": 584,
      "index": [
        2,
        108
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        248,
        249
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "Returns true if the two exceptions are equivalent, i.e. they have the same class, message,\nstack trace and cause.",
      "id": 585,
      "index": [
        4,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "method",
      "lineNumber": [
        256,
        257
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "ThrowableEquivalence",
      "content": "Returns true if the two exceptions are equivalent, i.e. they have the same class, message,\nstack trace and cause.",
      "id": 586,
      "index": [
        4,
        117
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        268,
        269
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "ANSI escape codes for formatting text in the console.",
      "id": 587,
      "index": [
        6,
        59
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        278,
        278
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Messages",
      "content": "* <p>Note: These codes are not supported on all consoles, and may not work on some platforms.",
      "id": 588,
      "index": [
        5,
        98
      ],
      "language": "java",
      "lastCommitDate": "",
      "level": "class",
      "lineNumber": [
        280,
        280
      ],
      "relativePath": "/core/src/com/google/inject/message/Messages-3.java",
      "type": [
        "expand",
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/util/Enhanced.java": [
    {
      "className": "",
      "content": "Utilities for checking if classes are enhanced and/or getting the original un-enhanced class.",
      "id": 594,
      "index": [
        0,
        93
      ],
      "language": "java",
      "lastCommitDate": "2023-04-27T20:35:31.000Z",
      "level": "class",
      "lineNumber": [
        5,
        5
      ],
      "relativePath": "/core/src/com/google/inject/util/Enhanced.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@since 6.0",
      "id": 595,
      "index": [
        0,
        10
      ],
      "language": "java",
      "lastCommitDate": "2023-04-27T20:35:31.000Z",
      "level": "class",
      "lineNumber": [
        7,
        7
      ],
      "relativePath": "/core/src/com/google/inject/util/Enhanced.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Enhanced",
      "content": "Returns true if this is a class that Guice enhanced with AOP functionality.",
      "id": 596,
      "index": [
        6,
        81
      ],
      "language": "java",
      "lastCommitDate": "2023-04-22T16:18:53.000Z",
      "level": "class",
      "lineNumber": [
        13,
        13
      ],
      "relativePath": "/core/src/com/google/inject/util/Enhanced.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Enhanced",
      "content": "If the input class is a class that {@link #isEnhanced} is true for, returns the un-enhanced\nversion of the class. Otherwise returns an empty optional.",
      "id": 597,
      "index": [
        2,
        152
      ],
      "language": "java",
      "lastCommitDate": "2023-04-22T16:18:53.000Z",
      "level": "class",
      "lineNumber": [
        18,
        19
      ],
      "relativePath": "/core/src/com/google/inject/util/Enhanced.java",
      "type": [
        "expand",
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/util/Modules.java": [
    {
      "className": "",
      "content": "Static utility methods for creating and working with instances of {@link Module}.",
      "id": 598,
      "index": [
        0,
        81
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        33,
        33
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "",
      "content": "@author jessewilson@google.com (Jesse Wilson)\n@since 2.0",
      "id": 599,
      "index": [
        0,
        56
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        35,
        36
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "ownership"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a builder that creates a module that overlays override modules over the given modules.\nIf a key is bound in both sets of modules, only the binding from the override modules is kept.\nIf a single {@link PrivateModule} is supplied or all elements are from a single {@link\nPrivateBinder}, then this will overwrite the private bindings. Otherwise, private bindings will\nnot be overwritten unless they are exposed. This can be used to replace the bindings of a\nproduction module with test bindings:",
      "id": 600,
      "index": [
        2,
        502
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        50,
        55
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "Module functionalTestModule\n    = Modules.override(new ProductionModule()).with(new TestModule());",
      "id": 601,
      "index": [
        2,
        100
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        58,
        59
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "<p>Prefer to write smaller modules that can be reused and tested without overrides.",
      "id": 602,
      "index": [
        2,
        85
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        62,
        62
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "@param modules the modules whose bindings are open to be overridden",
      "id": 603,
      "index": [
        2,
        69
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        64,
        64
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Modules",
      "content": "@deprecated there's no reason to use {@code Modules.override()} without any arguments.",
      "id": 604,
      "index": [
        6,
        92
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        71,
        71
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a builder that creates a module that overlays override modules over the given modules.\nIf a key is bound in both sets of modules, only the binding from the override modules is kept.\nIf a single {@link PrivateModule} is supplied or all elements are from a single {@link\nPrivateBinder}, then this will overwrite the private bindings. Otherwise, private bindings will\nnot be overwritten unless they are exposed. This can be used to replace the bindings of a\nproduction module with test bindings:",
      "id": 605,
      "index": [
        2,
        502
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        77,
        82
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary",
        "usage",
        "pointer"
      ]
    },
    {
      "className": "Modules",
      "content": "Module functionalTestModule\n    = Modules.override(getProductionModules()).with(getTestModules());",
      "id": 606,
      "index": [
        2,
        100
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        85,
        86
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Modules",
      "content": "<p>Prefer to write smaller modules that can be reused and tested without overrides.",
      "id": 607,
      "index": [
        2,
        85
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        89,
        89
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "@param modules the modules whose bindings are open to be overridden",
      "id": 608,
      "index": [
        2,
        69
      ],
      "language": "java",
      "lastCommitDate": "2008-08-02T21:21:32.000Z",
      "level": "class",
      "lineNumber": [
        91,
        91
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a new module that installs all of {@code modules}.",
      "id": 609,
      "index": [
        2,
        60
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        98,
        98
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "<p>Although sometimes helpful, this method is rarely necessary. Most Guice APIs accept multiple\narguments or (like {@code install()}) can be called repeatedly. Where possible, external APIs\nthat require a single module should similarly be adapted to permit multiple modules.",
      "id": 610,
      "index": [
        2,
        276
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        100,
        102
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Modules",
      "content": "@deprecated there's no need to \"combine\" one module; just install it directly.",
      "id": 611,
      "index": [
        2,
        80
      ],
      "language": "java",
      "lastCommitDate": "2024-05-07T21:48:32.000Z",
      "level": "class",
      "lineNumber": [
        109,
        109
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Modules",
      "content": "@deprecated this method call is effectively a no-op, just remove it.",
      "id": 612,
      "index": [
        6,
        74
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        118,
        118
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a new module that installs all of {@code modules}.",
      "id": 613,
      "index": [
        2,
        60
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        124,
        124
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "<p>Although sometimes helpful, this method is rarely necessary. Most Guice APIs accept multiple\narguments or (like {@code install()}) can be called repeatedly. Where possible, external APIs\nthat require a single module should similarly be adapted to permit multiple modules.",
      "id": 614,
      "index": [
        2,
        276
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        126,
        128
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Modules",
      "content": "See the EDSL example at {@link Modules#override(Module[]) override()}.",
      "id": 615,
      "index": [
        6,
        76
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:57:12.000Z",
      "level": "class",
      "lineNumber": [
        151,
        151
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Modules",
      "content": "See the EDSL example at {@link Modules#override(Module[]) override()}.",
      "id": 616,
      "index": [
        8,
        78
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:57:12.000Z",
      "level": "class",
      "lineNumber": [
        154,
        154
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "Modules",
      "content": "@deprecated there's no reason to use {@code .with()} without any arguments.",
      "id": 617,
      "index": [
        8,
        83
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "class",
      "lineNumber": [
        157,
        157
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "deprecation"
      ]
    },
    {
      "className": "Modules",
      "content": "See the EDSL example at {@link Modules#override(Module[]) override()}.",
      "id": 618,
      "index": [
        8,
        78
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:57:12.000Z",
      "level": "class",
      "lineNumber": [
        161,
        161
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "pointer"
      ]
    },
    {
      "className": "RealOverriddenModuleBuilder",
      "content": "TODO(diamondm) checkArgument(!baseModules.isEmpty())?",
      "id": 619,
      "index": [
        7,
        60
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "inline",
      "lineNumber": [
        168,
        168
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "TODO(diamondm) checkArgument(!overrides.isEmpty())?",
      "id": 620,
      "index": [
        7,
        58
      ],
      "language": "java",
      "lastCommitDate": "2019-08-28T01:14:02.000Z",
      "level": "inline",
      "lineNumber": [
        193,
        193
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "If the sole element was a PrivateElements, we want to override",
      "id": 621,
      "index": [
        9,
        71
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        204,
        204
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "the private elements within that -- so refocus our elements",
      "id": 622,
      "index": [
        9,
        68
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        205,
        205
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "and binder.",
      "id": 623,
      "index": [
        9,
        20
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        206,
        206
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "rational"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "execute the overrides module, keeping track of which keys and scopes are bound",
      "id": 624,
      "index": [
        9,
        87
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        233,
        233
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "execute the original module, skipping all scopes and overridden keys. We only skip each",
      "id": 625,
      "index": [
        9,
        96
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        254,
        254
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "overridden binding once so things still blow up if the module binds the same thing",
      "id": 626,
      "index": [
        9,
        91
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        255,
        255
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "multiple times.",
      "id": 627,
      "index": [
        9,
        24
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        256,
        256
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "Record when a scope instance is used in a binding",
      "id": 628,
      "index": [
        15,
        64
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        265,
        265
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "execute the scope bindings, skipping scopes that have been overridden. Any scope that",
      "id": 629,
      "index": [
        9,
        94
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        316,
        316
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "is overridden and in active use will prompt an error",
      "id": 630,
      "index": [
        9,
        61
      ],
      "language": "java",
      "lastCommitDate": "2013-10-05T21:04:53.000Z",
      "level": "inline",
      "lineNumber": [
        317,
        317
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "OverrideModule",
      "content": "passed to format method addError below",
      "id": 631,
      "index": [
        59,
        97
      ],
      "language": "java",
      "lastCommitDate": "2022-02-17T18:29:04.000Z",
      "level": "inline",
      "lineNumber": [
        328,
        328
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "expand"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a module that will configure the injector to require explicit bindings.",
      "id": 632,
      "index": [
        2,
        81
      ],
      "language": "java",
      "lastCommitDate": "2020-03-19T16:43:06.000Z",
      "level": "class",
      "lineNumber": [
        400,
        400
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "@since 4.2.3",
      "id": 633,
      "index": [
        2,
        14
      ],
      "language": "java",
      "lastCommitDate": "2020-03-19T16:43:06.000Z",
      "level": "class",
      "lineNumber": [
        402,
        402
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a module that will configure the injector to require {@literal @}{@link Inject} on\nconstructors.",
      "id": 634,
      "index": [
        2,
        106
      ],
      "language": "java",
      "lastCommitDate": "2019-10-04T17:54:50.000Z",
      "level": "class",
      "lineNumber": [
        416,
        417
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "@since 4.2.3\n@see Binder#requireAtInjectOnConstructors",
      "id": 635,
      "index": [
        2,
        56
      ],
      "language": "java",
      "lastCommitDate": "2019-10-04T17:54:50.000Z",
      "level": "class",
      "lineNumber": [
        419,
        420
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a module that will configure the injector to require an exactly matching binding\nannotation.",
      "id": 636,
      "index": [
        2,
        102
      ],
      "language": "java",
      "lastCommitDate": "2019-10-04T17:54:50.000Z",
      "level": "class",
      "lineNumber": [
        434,
        435
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "@since 4.2.3\n@see Binder#requireExactBindingAnnotations",
      "id": 637,
      "index": [
        2,
        57
      ],
      "language": "java",
      "lastCommitDate": "2019-10-04T17:54:50.000Z",
      "level": "class",
      "lineNumber": [
        437,
        438
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage",
        "pointer"
      ]
    },
    {
      "className": "Modules",
      "content": "Returns a module that will configure the injector to disable circular proxies.",
      "id": 638,
      "index": [
        2,
        80
      ],
      "language": "java",
      "lastCommitDate": "2020-03-19T16:43:06.000Z",
      "level": "class",
      "lineNumber": [
        452,
        452
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "summary"
      ]
    },
    {
      "className": "Modules",
      "content": "@since 4.2.3",
      "id": 639,
      "index": [
        2,
        14
      ],
      "language": "java",
      "lastCommitDate": "2020-03-19T16:43:06.000Z",
      "level": "class",
      "lineNumber": [
        454,
        454
      ],
      "relativePath": "/core/src/com/google/inject/util/Modules.java",
      "type": [
        "usage"
      ]
    }
  ],
  "/home/node/Userstudy-repo/core/src/com/google/inject/util/package-info.java": [
    {
      "className": "",
      "content": "Helper methods for working with Guice.",
      "id": 640,
      "index": [
        4,
        42
      ],
      "language": "java",
      "lastCommitDate": "2016-09-09T21:57:12.000Z",
      "level": "inline",
      "lineNumber": [
        0,
        0
      ],
      "relativePath": "/core/src/com/google/inject/util/package-info.java",
      "type": [
        "summary"
      ]
    }
  ]
}